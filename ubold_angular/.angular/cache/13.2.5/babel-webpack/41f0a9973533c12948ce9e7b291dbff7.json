{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/apps/residentes/Service/service.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../../shared/page-title/page-title.component\";\nimport * as i7 from \"../../../shared/advanced-table/advanced-table.component\";\nimport * as i8 from \"@angular/common\";\nconst _c0 = [\"advancedTable\"];\nconst _c1 = [\"content\"];\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(sanitizer, activeModal, fb, service, route) {\n      this.sanitizer = sanitizer;\n      this.activeModal = activeModal;\n      this.fb = fb;\n      this.service = service;\n      this.route = route;\n      this.pageTitle = [];\n      this.residentes = [];\n      this.columns = [];\n    }\n\n    ngOnInit() {\n      this.pageTitle = [{\n        label: 'Residentes',\n        path: '/'\n      }, {\n        label: 'Listado',\n        path: '/',\n        active: true\n      }];\n\n      this._fetchData(); // initialize advance table \n\n\n      this.initAdvancedTableData();\n      this.selectedResidente = this.residentes[0];\n      this.newContact = this.fb.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        phone: ['', Validators.required],\n        location: ['', Validators.required]\n      });\n    } // convenience getter for easy access to form fields\n\n\n    get form1() {\n      return this.newContact.controls;\n    }\n    /**\r\n    * opens modal\r\n    * @param title title of modal\r\n    * @param data data to be used in modal\r\n    */\n\n\n    openCreate() {\n      this.route.navigate(['apps/residentes/create']);\n    }\n    /**\r\n     * fetch contact list\r\n     */\n\n\n    _fetchData() {\n      this.service.getResidentes().subscribe(response => {\n        this.residentes = response.data;\n        console.log(this.residentes);\n        this.selectedResidente = this.residentes[0];\n        this.age = this.calculateAge(this.selectedResidente.resi_Nacimiento || '');\n      });\n    }\n\n    calculateAge(dateOfBirth) {\n      if (!dateOfBirth) {\n        return null;\n      }\n\n      const today = new Date();\n      const birthDate = new Date(dateOfBirth);\n      const age = today.getFullYear() - birthDate.getFullYear();\n      return age;\n    }\n    /**\r\n     * initialize advance table columns\r\n     */\n\n\n    initAdvancedTableData() {\n      this.columns = [{\n        name: 'name',\n        label: 'Nombres',\n        formatter: this.residenteNameFormatter.bind(this)\n      }, {\n        name: 'resi_Identidad',\n        label: 'Identidad',\n        formatter: residente => residente.resi_Identidad\n      }, {\n        name: 'resi_Nacimiento',\n        label: 'Nacimiento',\n        formatter: residente => {\n          const nacimiento = new Date(residente.resi_Nacimiento || '');\n          return nacimiento.toLocaleDateString();\n        }\n      }, {\n        name: 'sexoDes',\n        label: 'Sexo',\n        formatter: residente => residente.sexoDes\n      }, {\n        name: 'Action',\n        label: 'Acciones',\n        width: 82,\n        formatter: this.residenteActionFormatter.bind(this),\n        sort: false\n      }];\n    }\n    /**\r\n    *  handles operations that need to be performed after loading table\r\n    */\n\n\n    handleTableLoad(event) {\n      // product cell\n      document.querySelectorAll('.residente').forEach(e => {\n        e.addEventListener(\"click\", () => {\n          this.selectedResidente = this.residentes[Number(e.id) - 1];\n          this.age = this.calculateAge(this.selectedResidente.resi_Nacimiento || '');\n        });\n      });\n      document.querySelectorAll('.action-icon').forEach(e => {\n        e.addEventListener(\"click\", () => {\n          console.log('le dio');\n          console.log(this.residentes);\n        });\n      });\n    } // formats name cell\n\n\n    residenteNameFormatter(residente) {\n      // console.log(residente);\n      return this.sanitizer.bypassSecurityTrustHtml(`\n      <div class=\"table-user\">\n      <img src=\"${residente.expe_Fotografia}\" alt=\"table-user\" class=\"me-2 rounded-circle\">\n       <a href=\"javascript:void(0);\" class=\"residente text-body fw-semibold\" id=\"${residente.resi_Id}\">${residente.resi_Nombres} ${residente.resi_Apellidos}</a>\n       </div>\n      `);\n    } // action cell formatter\n\n\n    residenteActionFormatter() {\n      return this.sanitizer.bypassSecurityTrustHtml(` <a href=\"javascript:void(0);\" class=\"action-icon\"> <i class=\"mdi mdi-square-edit-outline\"></i></a>\n        <a href=\"javascript:void(0);\" class=\"action-icon\"> <i class=\"mdi mdi-delete\"></i></a>`);\n    }\n    /**\r\n    * Match table data with search input\r\n    * @param row Table row\r\n    * @param term Search the value\r\n    */\n\n\n    matches(row, term) {\n      var _a, _b, _c, _d, _e;\n\n      return ((_a = row.resi_Apellidos) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes(term)) || ((_b = row.resi_Nombres) === null || _b === void 0 ? void 0 : _b.toLowerCase().includes(term)) || ((_c = row.resi_FechaIngreso) === null || _c === void 0 ? void 0 : _c.toLowerCase().includes(term)) || ((_d = row.resi_Identidad) === null || _d === void 0 ? void 0 : _d.toLowerCase().includes(term)) || ((_e = row.resi_Sexo) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase().includes(term));\n    }\n    /**\r\n     * Search Method\r\n    */\n\n\n    searchData(searchTerm) {\n      if (searchTerm === '') {\n        this._fetchData();\n      } else {\n        let updatedData = this.residentes; //  filter\n\n        updatedData = updatedData.filter(residente => this.matches(residente, searchTerm));\n        this.residentes = updatedData;\n      }\n    }\n\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ServiceService), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-residentes-list\"]],\n    viewQuery: function ListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.advancedTable = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    decls: 48,\n    vars: 18,\n    consts: [[\"title\", \"Residentes\", 3, \"breadcrumbItems\"], [1, \"row\"], [1, \"col-lg-8\"], [1, \"card\"], [1, \"card-body\"], [1, \"row\", \"justify-content-between\", \"mb-2\"], [1, \"col-12\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"waves-effect\", \"waves-light\", \"mb-2\", \"float-end\"], [1, \"mdi\", \"mdi-cog\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"waves-effect\", \"waves-light\", \"mb-2\", 3, \"click\"], [\"tableClasses\", \"table-centered table-nowrap table-hover\", 3, \"tableData\", \"columns\", \"pagination\", \"isSearchable\", \"hasRowSelection\", \"isSortable\", \"handleTableLoad\", \"search\"], [\"advancedTable\", \"\"], [1, \"col-lg-4\"], [1, \"d-flex\", \"align-items-start\", \"mb-3\"], [\"alt\", \"Generic placeholder image\", 1, \"d-flex\", \"me-3\", \"rounded-circle\", \"avatar-lg\", 3, \"src\"], [1, \"w-100\"], [1, \"mt-0\", \"mb-1\"], [1, \"text-muted\"], [1, \"mdi\", \"mdi-office-building\"], [\"href\", \"javascript: void(0);\", 1, \"btn\", \"btn-xs\", \"btn-info\", \"me-1\"], [1, \"mb-3\", \"mt-4\", \"text-uppercase\", \"bg-light\", \"p-2\"], [1, \"mdi\", \"mdi-account-circle\", \"me-1\"], [1, \"\"], [1, \"font-13\", \"text-muted\", \"text-uppercase\"], [1, \"mb-3\"], [1, \"font-13\", \"text-muted\", \"text-uppercase\", \"mb-1\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\")(8, \"button\", 7);\n        i0.ɵɵelement(9, \"i\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_10_listener() {\n          return ctx.openCreate();\n        });\n        i0.ɵɵtext(11, \"Agregar\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"app-advanced-table\", 10, 11);\n        i0.ɵɵlistener(\"handleTableLoad\", function ListComponent_Template_app_advanced_table_handleTableLoad_12_listener($event) {\n          return ctx.handleTableLoad($event);\n        })(\"search\", function ListComponent_Template_app_advanced_table_search_12_listener($event) {\n          return ctx.searchData($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"div\", 12)(15, \"div\", 3)(16, \"div\", 4)(17, \"div\", 13);\n        i0.ɵɵelement(18, \"img\", 14);\n        i0.ɵɵelementStart(19, \"div\", 15)(20, \"h4\", 16);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\", 17);\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\", 17);\n        i0.ɵɵelement(25, \"i\", 18);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"a\", 19);\n        i0.ɵɵtext(28, \"Ver Historial\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"h5\", 20);\n        i0.ɵɵelement(30, \"i\", 21);\n        i0.ɵɵtext(31, \" Informaci\\u00F3n Del Expediente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 22)(33, \"h4\", 23);\n        i0.ɵɵtext(34, \"Tipo de Sangre :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"p\", 24);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"h4\", 25);\n        i0.ɵɵtext(38, \"Edad :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"p\", 24);\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"h4\", 25);\n        i0.ɵɵtext(42, \"Enfermedades :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"h4\", 25);\n        i0.ɵɵtext(44, \"Apertura del expediente :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"p\", 24);\n        i0.ɵɵtext(46);\n        i0.ɵɵpipe(47, \"date\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"breadcrumbItems\", ctx.pageTitle);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"tableData\", ctx.residentes)(\"columns\", ctx.columns)(\"pagination\", true)(\"isSearchable\", true)(\"hasRowSelection\", false)(\"isSortable\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"src\", ctx.selectedResidente.expe_Fotografia, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"\", ctx.selectedResidente.resi_Nombres, \" \", ctx.selectedResidente.resi_Apellidos, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.selectedResidente.sexoDes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.selectedResidente.cent_Nombre);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(ctx.selectedResidente.tiposang_Nombre);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.age);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(47, 15, ctx.selectedResidente.expe_FechaApertura, \"dd/MM/yyyy\"));\n      }\n    },\n    directives: [i6.PageTitleComponent, i7.AdvancedTableComponent],\n    pipes: [i8.DatePipe],\n    styles: [\"\"]\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}