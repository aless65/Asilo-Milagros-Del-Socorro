{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let CountdownDirective = /*#__PURE__*/(() => {\n  class CountdownDirective {\n    constructor() {\n      this.counterChanged = new EventEmitter();\n      this.countDown();\n    }\n    /**\r\n     * calculates remaining time\r\n     */\n\n\n    countDown() {\n      // Update the count down every 1 second\n      let x = setInterval(() => {\n        // Get todays date and time\n        let now = new Date(); // Find the distance between now an the count down date\n\n        let difference = Math.abs(Date.parse(String(this.countDownDate)) - Date.parse(String(now))) / 1000; // Time calculations for days, hours, minutes and seconds\n\n        let days = Math.floor(difference / 86400);\n        difference -= days * 86400;\n        let hours = Math.floor(difference / 3600) % 24;\n        difference -= hours * 3600;\n        let minutes = Math.floor(difference / 60) % 60;\n        difference -= minutes * 60;\n        let seconds = Math.floor(difference % (1000 * 60));\n        this.hours = (\"00\" + hours).slice(-2);\n        this.minutes = (\"00\" + minutes).slice(-2);\n        this.seconds = (\"00\" + seconds).slice(-2);\n        this.days = days < 10 ? (\"00\" + days).slice(-2) : String(days);\n        this.counterChanged.emit({\n          hours: this.hours,\n          minutes: this.minutes,\n          seconds: this.seconds,\n          days: this.days\n        });\n\n        if (difference < 0) {\n          clearInterval(x);\n        }\n      }, 1000);\n    }\n\n  }\n\n  CountdownDirective.ɵfac = function CountdownDirective_Factory(t) {\n    return new (t || CountdownDirective)();\n  };\n\n  CountdownDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CountdownDirective,\n    selectors: [[\"\", \"countDownDate\", \"\"]],\n    inputs: {\n      countDownDate: \"countDownDate\",\n      tick: \"tick\"\n    },\n    outputs: {\n      counterChanged: \"counterChanged\"\n    }\n  });\n  return CountdownDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}