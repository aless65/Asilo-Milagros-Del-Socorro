{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http) {\n      this.http = http;\n      this.user = null;\n    }\n    /**\r\n     * Returns the current user\r\n     */\n\n\n    currentUser() {\n      if (!this.user) {\n        this.user = JSON.parse(sessionStorage.getItem('currentUser'));\n      }\n\n      return this.user;\n    }\n    /**\r\n     * Performs the login auth\r\n     * @param email email of user\r\n     * @param password password of user\r\n     */\n\n\n    login(email, password) {\n      return this.http.post(`/api/login`, {\n        email,\n        password\n      }).pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          this.user = user; // store user details and jwt in session\n\n          sessionStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n    }\n    /**\r\n     * Performs the signup auth\r\n     * @param name name of user\r\n     * @param email email of user\r\n     * @param password password of user\r\n     */\n\n\n    signup(name, email, password) {\n      return this.http.post(`/api/signup`, {\n        name,\n        email,\n        password\n      }).pipe(map(user => user));\n    }\n    /**\r\n     * Logout the user\r\n     */\n\n\n    logout() {\n      // remove user from session storage to log user out\n      sessionStorage.removeItem('currentUser');\n      this.user = null;\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}