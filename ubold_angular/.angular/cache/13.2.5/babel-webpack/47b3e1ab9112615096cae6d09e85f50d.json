{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { AdvancedTableServices } from './advanced-table-service.service';\nimport { NgbSortableHeaderDirective } from './sortable.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./advanced-table-service.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./sortable.directive\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = [\"advancedTable\"];\n\nfunction AdvancedTableComponent_form_0_div_3_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r9);\n  }\n}\n\nfunction AdvancedTableComponent_form_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"label\", 17);\n    i0.ɵɵtext(3, \"Show \");\n    i0.ɵɵelementStart(4, \"select\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AdvancedTableComponent_form_0_div_3_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.service.pageSize = $event;\n    })(\"ngModelChange\", function AdvancedTableComponent_form_0_div_3_Template_select_ngModelChange_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.paginate();\n    });\n    i0.ɵɵtemplate(5, AdvancedTableComponent_form_0_div_3_option_5_Template, 2, 2, \"option\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" entries\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.service.pageSize);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.pageSizeOptions);\n  }\n}\n\nfunction AdvancedTableComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 7, 8)(2, \"div\", 9);\n    i0.ɵɵtemplate(3, AdvancedTableComponent_form_0_div_3_Template, 7, 2, \"div\", 10);\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"div\", 12)(6, \"label\", 13);\n    i0.ɵɵtext(7, \"Search: \");\n    i0.ɵɵelementStart(8, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AdvancedTableComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.service.searchTerm = $event;\n    })(\"ngModelChange\", function AdvancedTableComponent_form_0_Template_input_ngModelChange_8_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.searchData();\n    });\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.pageSizeOptions.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"col-sm-6\", ctx_r0.pageSizeOptions.length);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.service.searchTerm);\n  }\n}\n\nfunction AdvancedTableComponent_tr_5_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 23)(1, \"div\", 24)(2, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function AdvancedTableComponent_tr_5_th_1_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.selectAllRow($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r16.selectAll)(\"indeterminate\", ctx_r16.checkIntermediate());\n  }\n}\n\nfunction AdvancedTableComponent_tr_5_ng_container_2_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 28);\n    i0.ɵɵlistener(\"sort\", function AdvancedTableComponent_tr_5_ng_container_2_th_1_Template_th_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return ctx_r23.onSort($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵstyleProp(\"width\", column_r20.width, \"px\");\n    i0.ɵɵproperty(\"sortable\", column_r20.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r20.label, \"\");\n  }\n}\n\nfunction AdvancedTableComponent_tr_5_ng_container_2_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵstyleProp(\"width\", column_r20.width, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r20.label, \"\");\n  }\n}\n\nfunction AdvancedTableComponent_tr_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AdvancedTableComponent_tr_5_ng_container_2_th_1_Template, 2, 4, \"th\", 26);\n    i0.ɵɵtemplate(2, AdvancedTableComponent_tr_5_ng_container_2_th_2_Template, 2, 3, \"th\", 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r20.sort != false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", column_r20.sort === false);\n  }\n}\n\nfunction AdvancedTableComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AdvancedTableComponent_tr_5_th_1_Template, 3, 2, \"th\", 21);\n    i0.ɵɵtemplate(2, AdvancedTableComponent_tr_5_ng_container_2_Template, 3, 2, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasRowSelection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.columns);\n  }\n}\n\nfunction AdvancedTableComponent_tr_6_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 23)(1, \"div\", 24)(2, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function AdvancedTableComponent_tr_6_th_1_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.selectAllRow($event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r27.selectAll)(\"indeterminate\", ctx_r27.checkIntermediate());\n  }\n}\n\nfunction AdvancedTableComponent_tr_6_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r31 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", column_r31.width, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", column_r31.label, \"\");\n  }\n}\n\nfunction AdvancedTableComponent_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AdvancedTableComponent_tr_6_th_1_Template, 3, 2, \"th\", 21);\n    i0.ɵɵtemplate(2, AdvancedTableComponent_tr_6_th_2_Template, 2, 3, \"th\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.hasRowSelection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.columns);\n  }\n}\n\nfunction AdvancedTableComponent_tr_8_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"div\", 24)(2, \"input\", 31);\n    i0.ɵɵlistener(\"change\", function AdvancedTableComponent_tr_8_td_1_Template_input_change_2_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const i_r33 = i0.ɵɵnextContext().index;\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.selectRow(i_r33 + (ctx_r36.service.page - 1) * ctx_r36.service.pageSize);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const i_r33 = i0.ɵɵnextContext().index;\n    const ctx_r34 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r34.isSelected[i_r33 + (ctx_r34.service.page - 1) * ctx_r34.service.pageSize]);\n  }\n}\n\nfunction AdvancedTableComponent_tr_8_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r40 = ctx.$implicit;\n    const record_r32 = i0.ɵɵnextContext().$implicit;\n    const ctx_r35 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHtml\", ctx_r35.callFormatter(column_r40, record_r32), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction AdvancedTableComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, AdvancedTableComponent_tr_8_td_1_Template, 3, 1, \"td\", 4);\n    i0.ɵɵtemplate(2, AdvancedTableComponent_tr_8_td_2_Template, 2, 1, \"td\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r33 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selected\", ctx_r4.isSelected[i_r33 + (ctx_r4.service.page - 1) * ctx_r4.service.pageSize]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasRowSelection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.columns);\n  }\n}\n\nfunction AdvancedTableComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ngb-pagination\", 34);\n    i0.ɵɵlistener(\"pageChange\", function AdvancedTableComponent_div_10_Template_ngb_pagination_pageChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return ctx_r42.service.page = $event;\n    })(\"pageChange\", function AdvancedTableComponent_div_10_Template_ngb_pagination_pageChange_3_listener() {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return ctx_r44.paginate();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\" Showing \", ctx_r5.service.startIndex, \" to \", ctx_r5.service.endIndex, \" of \", ctx_r5.service.totalRecords, \" entries \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"collectionSize\", ctx_r5.service.totalRecords)(\"page\", ctx_r5.service.page)(\"maxSize\", 3)(\"rotate\", true)(\"pageSize\", ctx_r5.service.pageSize);\n  }\n}\n\nexport let AdvancedTableComponent = /*#__PURE__*/(() => {\n  class AdvancedTableComponent {\n    constructor(service, sanitizer, componentFactoryResolver) {\n      this.service = service;\n      this.sanitizer = sanitizer;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.pagination = false;\n      this.isSearchable = false;\n      this.isSortable = false;\n      this.pageSizeOptions = [];\n      this.tableData = [];\n      this.tableClasses = '';\n      this.theadClasses = '';\n      this.hasRowSelection = false;\n      this.columns = [];\n      this.collectionSize = this.tableData.length;\n      this.selectAll = false;\n      this.isSelected = [];\n      this.search = new EventEmitter();\n      this.sort = new EventEmitter();\n      this.handleTableLoad = new EventEmitter();\n    }\n\n    ngAfterViewChecked() {\n      this.handleTableLoad.emit();\n    }\n\n    ngOnInit() {\n      for (let i = 0; i < this.tableData.length; i++) {\n        this.isSelected[i] = false;\n      }\n    }\n\n    ngOnChanges(changes) {\n      this.paginate();\n    }\n    /**\r\n     * sets pagination configurations\r\n     */\n\n\n    paginate() {\n      // paginate\n      this.service.totalRecords = this.tableData.length;\n\n      if (this.service.totalRecords === 0) {\n        this.service.startIndex = 0;\n      } else {\n        this.service.startIndex = (this.service.page - 1) * this.service.pageSize + 1;\n      }\n\n      this.service.endIndex = Number((this.service.page - 1) * this.service.pageSize + this.service.pageSize);\n\n      if (this.service.endIndex > this.service.totalRecords) {\n        this.service.endIndex = this.service.totalRecords;\n      }\n    }\n    /**\r\n     * Search Method\r\n    */\n\n\n    searchData() {\n      this.search.emit(this.service.searchTerm);\n    }\n    /**\r\n     * sorts column\r\n     * @param param0 column name,sort direction\r\n     */\n\n\n    onSort({\n      column,\n      direction\n    }) {\n      // resetting other headers\n      this.headers.forEach(header => {\n        if (header.sortable !== column) {\n          header.direction = '';\n        }\n      });\n      this.service.sortColumn = column;\n      this.service.sortDirection = direction;\n      this.sort.emit({\n        column,\n        direction\n      });\n    }\n    /**\r\n     *  calls formatter function for table cells\r\n     * @param column column name\r\n     * @param data data of column\r\n     */\n\n\n    callFormatter(column, data) {\n      return column.formatter(data);\n    }\n    /**\r\n     * @returns intermediate status of selectAll checkbox\r\n     */\n\n\n    checkIntermediate() {\n      let selectedRowCount = this.isSelected.filter(x => x === true).length;\n\n      if (!this.selectAll && selectedRowCount > 0 && selectedRowCount < this.tableData.length) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /**\r\n     * select all row\r\n     * @param event event\r\n     */\n\n\n    selectAllRow(event) {\n      this.selectAll = !this.selectAll;\n\n      if (this.selectAll) {\n        for (let i = 0; i < this.tableData.length; i++) {\n          this.isSelected[i] = true;\n        }\n      } else {\n        for (let i = 0; i < this.tableData.length; i++) {\n          this.isSelected[i] = false;\n        }\n      }\n    }\n    /**\r\n     * selects row\r\n     * @param index row index\r\n     */\n\n\n    selectRow(index) {\n      this.isSelected[index] = !this.isSelected[index];\n      this.selectAll = this.isSelected.filter(x => x === true).length === this.tableData.length;\n    }\n\n  }\n\n  AdvancedTableComponent.ɵfac = function AdvancedTableComponent_Factory(t) {\n    return new (t || AdvancedTableComponent)(i0.ɵɵdirectiveInject(i1.AdvancedTableServices), i0.ɵɵdirectiveInject(i2.DomSanitizer), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n\n  AdvancedTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdvancedTableComponent,\n    selectors: [[\"app-advanced-table\"]],\n    viewQuery: function AdvancedTableComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgbSortableHeaderDirective, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headers = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.advancedTable = _t);\n      }\n    },\n    inputs: {\n      pagination: \"pagination\",\n      isSearchable: \"isSearchable\",\n      isSortable: \"isSortable\",\n      pageSizeOptions: \"pageSizeOptions\",\n      tableData: \"tableData\",\n      tableClasses: \"tableClasses\",\n      theadClasses: \"theadClasses\",\n      hasRowSelection: \"hasRowSelection\",\n      columns: \"columns\"\n    },\n    outputs: {\n      search: \"search\",\n      sort: \"sort\",\n      handleTableLoad: \"handleTableLoad\"\n    },\n    features: [i0.ɵɵProvidersFeature([AdvancedTableServices]), i0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 13,\n    consts: [[\"class\", \"my-2\", 4, \"ngIf\"], [1, \"table-responsive\"], [\"id\", \"advancd-table\", 1, \"table\", \"advanced-table\", \"table-nowrap\", \"mb-0\"], [\"advancedTable\", \"\"], [4, \"ngIf\"], [3, \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"d-flex flex-wrap justify-content-center align-items-center justify-content-md-between mt-2\", 4, \"ngIf\"], [1, \"my-2\"], [\"displayForm\", \"ngForm\"], [1, \"row\", \"mb-2\"], [\"class\", \"col-12 col-sm-6\", 4, \"ngIf\"], [1, \"col-12\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-center\", \"justify-content-sm-end\"], [1, \"d-inline\"], [\"type\", \"text\", \"name\", \"searchTerm\", \"aria-controls\", \"advanced-table\", 1, \"form-control\", \"form-control-sm\", \"d-inline\", \"w-auto\", \"ms-1\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-12\", \"col-sm-6\"], [1, \"text-center\", \"text-sm-start\"], [1, \"form-label\", \"me-1\"], [\"name\", \"pageSize\", \"id\", \"event-category\", \"required\", \"\", 1, \"form-select\", \"form-select-sm\", \"w-auto\", \"ms-1\", \"me-1\", \"d-inline\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"class\", \"row_select\", \"style\", \"width: 20px;\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row_select\", 2, \"width\", \"20px\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"flexCheckIndeterminate\", 1, \"form-check-input\", 3, \"checked\", \"indeterminate\", \"change\"], [\"class\", \"text-capitalize sortable pe-3 pe-lg-auto\", 3, \"width\", \"sortable\", \"sort\", 4, \"ngIf\"], [\"class\", \"text-capitalize\", 3, \"width\", 4, \"ngIf\"], [1, \"text-capitalize\", \"sortable\", \"pe-3\", \"pe-lg-auto\", 3, \"sortable\", \"sort\"], [1, \"text-capitalize\"], [\"class\", \"text-capitalize\", 3, \"width\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"flexCheckIndeterminate\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [3, \"innerHtml\"], [1, \"d-flex\", \"flex-wrap\", \"justify-content-center\", \"align-items-center\", \"justify-content-md-between\", \"mt-2\"], [1, \"pagination-rounded\", \"custom-pagination\", 3, \"collectionSize\", \"page\", \"maxSize\", \"rotate\", \"pageSize\", \"pageChange\"]],\n    template: function AdvancedTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AdvancedTableComponent_form_0_Template, 9, 4, \"form\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"table\", 2, 3)(4, \"thead\");\n        i0.ɵɵtemplate(5, AdvancedTableComponent_tr_5_Template, 3, 2, \"tr\", 4);\n        i0.ɵɵtemplate(6, AdvancedTableComponent_tr_6_Template, 3, 2, \"tr\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"tbody\");\n        i0.ɵɵtemplate(8, AdvancedTableComponent_tr_8_Template, 3, 4, \"tr\", 5);\n        i0.ɵɵpipe(9, \"slice\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(10, AdvancedTableComponent_div_10_Template, 4, 8, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isSearchable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.tableClasses);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.theadClasses);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSortable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isSortable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(9, 9, ctx.tableData, (ctx.service.page - 1) * ctx.service.pageSize, ctx.service.page * ctx.service.pageSize));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.pagination);\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.SelectControlValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i5.NgbSortableHeaderDirective, i6.NgbPagination],\n    pipes: [i3.SlicePipe],\n    styles: [\"\"]\n  });\n  return AdvancedTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}