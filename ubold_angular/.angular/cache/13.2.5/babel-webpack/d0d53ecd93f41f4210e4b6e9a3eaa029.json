{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"simplebar-angular\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"addTodo\"];\n\nfunction TodoComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"h5\", 15)(3, \"span\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" of \");\n    i0.ɵɵelementStart(6, \"span\", 17);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" remaining\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 18)(10, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function TodoComponent_div_13_Template_a_click_10_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.archiveTasks();\n    });\n    i0.ɵɵtext(11, \"Archive\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getInprogressTodoCount());\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.toDoItems.length);\n  }\n}\n\nfunction TodoComponent_li_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"input\", 23);\n    i0.ɵɵlistener(\"change\", function TodoComponent_li_16_div_1_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const todo_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.toggleTodo(todo_r5);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 24)(3, \"s\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const todo_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", todo_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", todo_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r5.text);\n  }\n}\n\nfunction TodoComponent_li_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"input\", 25);\n    i0.ɵɵlistener(\"change\", function TodoComponent_li_16_div_2_Template_input_change_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const todo_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.toggleTodo(todo_r5);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 24);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const todo_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", todo_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", todo_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(todo_r5.text);\n  }\n}\n\nfunction TodoComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵtemplate(1, TodoComponent_li_16_div_1_Template, 5, 3, \"div\", 21);\n    i0.ɵɵtemplate(2, TodoComponent_li_16_div_2_Template, 4, 3, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", todo_r5.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !todo_r5.completed);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction TodoComponent_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 26, 27);\n    i0.ɵɵlistener(\"ngSubmit\", function TodoComponent_form_17_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.addNewTask();\n    });\n    i0.ɵɵelementStart(2, \"div\", 13)(3, \"div\", 14)(4, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function TodoComponent_form_17_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.newTask = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 29);\n    i0.ɵɵtext(6, \" Please enter your task name \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 18)(8, \"button\", 30);\n    i0.ɵɵtext(9, \"Add\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.newTask)(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r2.submitted && ctx_r2.newTask === \"\" || ctx_r2.newTask === \" \"));\n  }\n}\n\nexport let TodoComponent = /*#__PURE__*/(() => {\n  class TodoComponent {\n    constructor() {\n      this.toDoItems = [];\n      this.height = 0;\n      this.archivable = false;\n      this.addable = false;\n      this.newTask = '';\n      this.submitted = false;\n      this.archiveTodos = new EventEmitter();\n      this.addTask = new EventEmitter();\n    }\n\n    ngOnInit() {}\n    /**\r\n     * changes status of todo item\r\n     * @param todoItem todo item\r\n     */\n\n\n    toggleTodo(todoItem) {\n      todoItem.completed = !todoItem.completed;\n    }\n    /**\r\n     * archive completed tasks\r\n     */\n\n\n    archiveTasks() {\n      this.archiveTodos.emit();\n    }\n    /**\r\n     * add new task in todo list\r\n     */\n\n\n    addNewTask() {\n      this.submitted = true;\n\n      if (this.newTask !== '') {\n        this.addTask.emit(this.newTask);\n        this.newTask = '';\n        this.submitted = false;\n      }\n    }\n    /**\r\n     * Returns the remaining todos\r\n     */\n\n\n    getInprogressTodoCount() {\n      return this.toDoItems.filter(todoItem => todoItem.completed === false).length;\n    }\n\n  }\n\n  TodoComponent.ɵfac = function TodoComponent_Factory(t) {\n    return new (t || TodoComponent)();\n  };\n\n  TodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoComponent,\n    selectors: [[\"app-widget-todo\"]],\n    viewQuery: function TodoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addTodo = _t.first);\n      }\n    },\n    inputs: {\n      toDoItems: \"toDoItems\",\n      height: \"height\",\n      archivable: \"archivable\",\n      addable: \"addable\"\n    },\n    outputs: {\n      archiveTodos: \"archiveTodos\",\n      addTask: \"addTask\"\n    },\n    decls: 18,\n    vars: 5,\n    consts: [[1, \"card\"], [1, \"card-body\"], [\"ngbDropdown\", \"\", 1, \"float-end\"], [\"href\", \"javascript:void(0)\", \"id\", \"messageDropdown\", \"aria-expanded\", \"false\", \"ngbDropdownToggle\", \"\", 1, \"arrow-none\", \"card-drop\"], [1, \"mdi\", \"mdi-dots-vertical\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"messageDropdown\", 1, \"dropdown-menu-end\"], [\"ngbDropdownItem\", \"\"], [1, \"header-title\", \"mb-3\"], [1, \"todoapp\"], [\"class\", \"row\", 4, \"ngIf\"], [\"id\", \"todo-list\", 1, \"list-group\", \"list-group-flush\", \"todo-list\"], [\"class\", \"list-group-item border-0 ps-0\", 4, \"ngFor\", \"ngForOf\"], [\"name\", \"todo-form\", \"class\", \"mt-3\", 3, \"ngSubmit\", 4, \"ngIf\"], [1, \"row\"], [1, \"col\"], [\"id\", \"todo-message\"], [\"id\", \"todo-remaining\"], [\"id\", \"todo-total\"], [1, \"col-auto\"], [\"href\", \"javascript:void(0)\", \"id\", \"btn-archive\", 1, \"float-end\", \"btn\", \"btn-light\", \"btn-sm\", 3, \"click\"], [1, \"list-group-item\", \"border-0\", \"ps-0\"], [\"class\", \"form-check mb-0\", 4, \"ngIf\"], [1, \"form-check\", \"mb-0\"], [\"type\", \"checkbox\", \"checked\", \"\", 1, \"form-check-input\", \"todo-done\", 3, \"id\", \"change\"], [1, \"form-check-label\", 3, \"for\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"change\"], [\"name\", \"todo-form\", 1, \"mt-3\", 3, \"ngSubmit\"], [\"addTodo\", \"ngForm\"], [\"type\", \"text\", \"id\", \"todo-input-text\", \"name\", \"todo-input-text\", \"placeholder\", \"Add new todo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [1, \"invalid-feedback\"], [\"type\", \"submit\", \"id\", \"todo-btn-submit\", 1, \"btn-primary\", \"btn-md\", \"btn\", \"waves-effect\", \"waves-light\"]],\n    template: function TodoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵelement(4, \"i\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"a\", 6);\n        i0.ɵɵtext(7, \"Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"a\", 6);\n        i0.ɵɵtext(9, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"h4\", 7);\n        i0.ɵɵtext(11, \"Todo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵtemplate(13, TodoComponent_div_13_Template, 12, 2, \"div\", 9);\n        i0.ɵɵelementStart(14, \"ngx-simplebar\")(15, \"ul\", 10);\n        i0.ɵɵtemplate(16, TodoComponent_li_16_Template, 3, 2, \"li\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, TodoComponent_form_17_Template, 10, 4, \"form\", 12);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.archivable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"height\", ctx.height, \"px\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.toDoItems);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addable);\n      }\n    },\n    directives: [i1.NgbDropdown, i1.NgbDropdownToggle, i1.NgbDropdownMenu, i1.NgbDropdownItem, i2.NgIf, i3.SimplebarAngularComponent, i2.NgForOf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i2.NgClass],\n    styles: [\"\"]\n  });\n  return TodoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}