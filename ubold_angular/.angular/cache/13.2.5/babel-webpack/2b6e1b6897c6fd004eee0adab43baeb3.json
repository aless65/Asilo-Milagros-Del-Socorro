{"ast":null,"code":"import { TICKETSLIST } from '../shared/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"../../../shared/page-title/page-title.component\";\nimport * as i4 from \"../../../shared/widget/statistics-card4/statistics-card4.component\";\nimport * as i5 from \"../../../shared/advanced-table/advanced-table.component\";\nconst _c0 = [\"advancedTable\"];\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(router, route, sanitizer) {\n      this.router = router;\n      this.route = route;\n      this.sanitizer = sanitizer;\n      this.pageTitle = [];\n      this.columns = [];\n      this.pageSizeOptions = [5, 10, 20];\n      this.ticketList = [];\n    }\n\n    ngOnInit() {\n      this.pageTitle = [{\n        label: 'Tickets',\n        path: '/'\n      }, {\n        label: 'Ticket List',\n        path: '/',\n        active: true\n      }];\n\n      this._fetchData();\n\n      this.initAdvancedTableData();\n    }\n    /**\r\n     * fetches ticket list\r\n     */\n\n\n    _fetchData() {\n      this.ticketList = TICKETSLIST;\n    }\n    /**\r\n    * initialize advance table columns\r\n    */\n\n\n    initAdvancedTableData() {\n      this.columns = [{\n        name: 'id',\n        label: 'ID',\n        formatter: this.ticketIdFormatter.bind(this)\n      }, {\n        name: 'requested_by',\n        label: 'Requested By',\n        formatter: this.ticketRequestedFormatter.bind(this)\n      }, {\n        name: 'subject',\n        label: 'Subject',\n        formatter: ticket => ticket.subject\n      }, {\n        name: 'assignee',\n        label: 'Assignee',\n        formatter: this.ticketAssigneeFormatter.bind(this),\n        sort: false\n      }, {\n        name: 'priority',\n        label: 'Priority',\n        formatter: this.ticketPriorityFormatter.bind(this)\n      }, {\n        name: 'status',\n        label: 'Status',\n        formatter: this.ticketStatusFormatter.bind(this)\n      }, {\n        name: 'created_date',\n        label: 'Created Date',\n        formatter: ticket => ticket.created_date\n      }, {\n        name: 'due_date',\n        label: 'Due Date',\n        formatter: ticket => ticket.due_date\n      }, {\n        name: 'Action',\n        label: 'Action',\n        width: 75,\n        formatter: this.customerActionFormatter.bind(this),\n        sort: false\n      }];\n    }\n    /**\r\n    *  handles operations that need to be performed after loading table\r\n    */\n\n\n    handleTableLoad(event) {\n      document.querySelectorAll('.ticket').forEach(e => {\n        e.addEventListener(\"click\", () => {\n          this.router.navigate(['../details'], {\n            relativeTo: this.route,\n            queryParams: {\n              id: e.id\n            }\n          });\n        });\n      });\n    } //formats id cell\n\n\n    ticketIdFormatter(ticket) {\n      return this.sanitizer.bypassSecurityTrustHtml(`<b>${ticket.id}</b>`);\n    } // formats requested by cell\n\n\n    ticketRequestedFormatter(ticket) {\n      return this.sanitizer.bypassSecurityTrustHtml(`<a href=\"javascript: void(0);\" class=\"text-body ticket\" id=\"${ticket.id}\">\n        <img src=\"${ticket.requested_by.image}\" alt=\"contact-img\" title=\"contact-img\" class=\"rounded-circle avatar-xs\" />\n        <span class=\"ms-2\">${ticket.requested_by.name}</span>\n         </a>`);\n    } // formats assignee cell\n\n\n    ticketAssigneeFormatter(ticket) {\n      return this.sanitizer.bypassSecurityTrustHtml(`  <a href=\"javascript: void(0);\">\n        <img src=\"${ticket.assignee}\" alt=\"contact-img\" title=\"contact-img\" class=\"rounded-circle avatar-xs\" />\n        </a>`);\n    } // formats ticket priority\n\n\n    ticketPriorityFormatter(ticket) {\n      if (ticket.priority == \"Low\") {\n        return this.sanitizer.bypassSecurityTrustHtml(` <span class=\"badge bg-soft-secondary text-secondary\">Low</span>`);\n      } else if (ticket.priority == 'Medium') {\n        return this.sanitizer.bypassSecurityTrustHtml(` <span class=\"badge bg-soft-warning text-warning\">Medium</span>`);\n      } else {\n        return this.sanitizer.bypassSecurityTrustHtml(` <span class=\"badge bg-soft-danger text-danger\">High</span>`);\n      }\n    } // formats ticket status\n\n\n    ticketStatusFormatter(ticket) {\n      if (ticket.status == \"Open\") {\n        return this.sanitizer.bypassSecurityTrustHtml(`<span class=\"badge bg-success\">Open</span>`);\n      } else {\n        return this.sanitizer.bypassSecurityTrustHtml(`<span class=\"badge  bg-secondary text-light\">Closed</span>`);\n      }\n    } // action cell formatter\n\n\n    customerActionFormatter() {\n      return this.sanitizer.bypassSecurityTrustHtml(` <div class=\"btn-group dropdown\" >\n       <a href=\"javascript: void(0);\" class=\"table-action-btn arrow-none btn btn-light btn-sm\" ><i class=\"mdi mdi-dots-horizontal\"></i></a>\n       <div class=\"dropdown-menu dropdown-menu-end\" >\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\"><i class=\"mdi mdi-pencil me-2 text-muted font-18 vertical-middle\"></i>Edit Ticket</a>\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\"><i class=\"mdi mdi-check-all me-2 text-muted font-18 vertical-middle\"></i>Close</a>\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\"><i class=\"mdi mdi-delete me-2 text-muted font-18 vertical-middle\"></i>Remove</a>\n        <a class=\"dropdown-item\" href=\"javascript:void(0)\"><i class=\"mdi mdi-star me-2 font-18 text-muted vertical-middle\"></i>Mark as Unread</a>\n        </div>\n        </div>`);\n    }\n    /**\r\n    * compares two cell value\r\n    */\n\n\n    compare(v1, v2) {\n      return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\n    }\n    /**\r\n     * Sort the table data\r\n     * @param event column name,direction\r\n     */\n\n\n    sort(event) {\n      if (event.direction === '') {\n        this.ticketList = TICKETSLIST;\n      } else {\n        this.ticketList = [...this.ticketList].sort((a, b) => {\n          let res;\n\n          if (event.column === 'requested_by') {\n            res = this.compare(a['requested_by']['name'], b['requested_by']['name']);\n          } else {\n            res = this.compare(a[event.column], b[event.column]);\n          }\n\n          return event.direction === 'asc' ? res : -res;\n        });\n      }\n    }\n    /**\r\n    * Match table data with search input\r\n    * @param row Table row\r\n    * @param term Search the value\r\n    */\n\n\n    matches(row, term) {\n      var _a, _b, _c, _d, _e, _f;\n\n      return ((_a = row.requested_by.name) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes(term)) || ((_b = row.subject) === null || _b === void 0 ? void 0 : _b.toLowerCase().includes(term)) || ((_c = row.priority) === null || _c === void 0 ? void 0 : _c.toLowerCase().includes(term)) || ((_d = row.created_date) === null || _d === void 0 ? void 0 : _d.toLowerCase().includes(term)) || ((_e = row.due_date) === null || _e === void 0 ? void 0 : _e.toLowerCase().includes(term)) || ((_f = row.status) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase().includes(term));\n    }\n    /**\r\n     * Search Method\r\n     */\n\n\n    searchData(searchTerm) {\n      if (searchTerm === '') {\n        this._fetchData();\n      } else {\n        let updatedData = TICKETSLIST; //  filter\n\n        updatedData = updatedData.filter(ticket => this.matches(ticket, searchTerm));\n        this.ticketList = updatedData;\n      }\n    }\n\n  }\n\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n  };\n\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-tickets-list\"]],\n    viewQuery: function ListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.advancedTable = _t.first);\n      }\n    },\n    decls: 21,\n    vars: 12,\n    consts: [[\"title\", \"Ticket List\", 3, \"breadcrumbItems\"], [1, \"row\"], [1, \"col-md-6\", \"col-xl-3\"], [\"variant\", \"white\", \"iconContainerClass\", \"rounded-circle bg-primary\", \"description\", \"Total Tickets\", \"icon\", \"fe-tag\", 3, \"stats\"], [\"variant\", \"white\", \"iconContainerClass\", \"rounded-circle bg-warning\", \"description\", \"Pending Tickets\", \"icon\", \"fe-clock\", 3, \"stats\"], [\"variant\", \"white\", \"iconContainerClass\", \"rounded-circle bg-success\", \"description\", \"Closed Tickets\", \"icon\", \"fe-check-circle\", 3, \"stats\"], [\"variant\", \"white\", \"iconContainerClass\", \"rounded-circle bg-danger\", \"description\", \"Deleted Tickets\", \"icon\", \"fe-trash-2\", 3, \"stats\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-body\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-blue\", \"waves-effect\", \"waves-light\", \"float-end\"], [1, \"mdi\", \"mdi-plus-circle\"], [1, \"header-title\", \"mb-4\"], [\"tableClasses\", \"table-centered\", 3, \"tableData\", \"columns\", \"hasRowSelection\", \"pagination\", \"isSearchable\", \"pageSizeOptions\", \"isSortable\", \"handleTableLoad\", \"search\", \"sort\"], [\"advancedTable\", \"\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-widget-statistics-card4\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"app-widget-statistics-card4\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"app-widget-statistics-card4\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2);\n        i0.ɵɵelement(9, \"app-widget-statistics-card4\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 7)(12, \"div\", 8)(13, \"div\", 9)(14, \"button\", 10);\n        i0.ɵɵelement(15, \"i\", 11);\n        i0.ɵɵtext(16, \" Add Ticket \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"h4\", 12);\n        i0.ɵɵtext(18, \"Manage Tickets\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"app-advanced-table\", 13, 14);\n        i0.ɵɵlistener(\"handleTableLoad\", function ListComponent_Template_app_advanced_table_handleTableLoad_19_listener($event) {\n          return ctx.handleTableLoad($event);\n        })(\"search\", function ListComponent_Template_app_advanced_table_search_19_listener($event) {\n          return ctx.searchData($event);\n        })(\"sort\", function ListComponent_Template_app_advanced_table_sort_19_listener($event) {\n          return ctx.sort($event);\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"breadcrumbItems\", ctx.pageTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"stats\", 3947);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"stats\", 624);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"stats\", 3195);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"stats\", 128);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"tableData\", ctx.ticketList)(\"columns\", ctx.columns)(\"hasRowSelection\", false)(\"pagination\", true)(\"isSearchable\", true)(\"pageSizeOptions\", ctx.pageSizeOptions)(\"isSortable\", true);\n      }\n    },\n    directives: [i3.PageTitleComponent, i4.StatisticsCard4Component, i5.AdvancedTableComponent],\n    styles: [\"\"]\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}