{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"../../../shared/page-title/page-title.component\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-dropzone\";\nimport * as i5 from \"@angular/common\";\n\nfunction UploadComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"div\", 15)(3, \"div\", 16)(4, \"div\", 17);\n    i0.ɵɵelement(5, \"img\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 19)(7, \"a\", 20);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 21);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 17)(12, \"a\", 22);\n    i0.ɵɵlistener(\"click\", function UploadComponent_div_22_Template_a_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onRemove($event);\n    });\n    i0.ɵɵelement(13, \"i\", 23);\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const f_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"alt\", f_r2.name)(\"src\", ctx_r1.getPreviewUrl(f_r2), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(f_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getSize(f_r2));\n  }\n}\n\nexport let UploadComponent = /*#__PURE__*/(() => {\n  class UploadComponent {\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n      this.pageTitle = [];\n      this.files = [];\n    }\n\n    ngOnInit() {\n      this.pageTitle = [{\n        label: 'Forms',\n        path: '/'\n      }, {\n        label: 'File Uploads',\n        path: '/',\n        active: true\n      }];\n    }\n    /**\r\n     * adds new file in uploaded files\r\n     * @param event event\r\n     */\n\n\n    onSelect(event) {\n      this.files.push(...event.addedFiles);\n    }\n    /**\r\n     * removes file from uploaded files\r\n     * @param event event\r\n     */\n\n\n    onRemove(event) {\n      this.files.splice(this.files.indexOf(event), 1);\n    }\n    /**\r\n    * Formats the size\r\n    */\n\n\n    getSize(f) {\n      const bytes = f.size;\n\n      if (bytes === 0) {\n        return '0 Bytes';\n      }\n\n      const k = 1024;\n      const dm = 2;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n    /**\r\n     * returns preview url of file\r\n     * @param f file\r\n     */\n\n\n    getPreviewUrl(f) {\n      return this.sanitizer.bypassSecurityTrustResourceUrl(encodeURI(URL.createObjectURL(f)));\n    }\n\n  }\n\n  UploadComponent.ɵfac = function UploadComponent_Factory(t) {\n    return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n  };\n\n  UploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadComponent,\n    selectors: [[\"app-form-upload\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[\"title\", \"File Uploads\", 3, \"breadcrumbItems\"], [1, \"row\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"header-title\", \"m-t-0\"], [1, \"text-muted\", \"font-14\"], [\"fileUpload\", \"ngForm\"], [\"accept\", \"image/jpeg,image/jpg,image/png,image/gif\", 1, \"dropzone\", 2, \"height\", \"auto !important\", 3, \"change\"], [1, \"h1\", \"text-muted\", \"dripicons-cloud-upload\"], [1, \"text-muted\", \"font-13\"], [\"id\", \"file-previews\", 1, \"dropzone-previews\", \"mt-3\"], [\"id\", \"uploadPreviewTemplate\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"uploadPreviewTemplate\"], [1, \"card\", \"mt-1\", \"mb-0\", \"shadow-none\", \"border\"], [1, \"p-2\"], [1, \"row\", \"align-items-center\"], [1, \"col-auto\"], [1, \"avatar-sm\", \"rounded\", \"bg-light\", 3, \"alt\", \"src\"], [1, \"col\", \"ps-0\"], [\"href\", \"javascript:void(0);\", 1, \"text-muted\", \"fw-bold\"], [1, \"mb-0\"], [\"href\", \"javascript:void(0)\", 1, \"btn\", \"btn-link\", \"btn-lg\", \"text-muted\", 3, \"click\"], [1, \"dripicons-cross\"]],\n    template: function UploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"Dropzone File Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\", 6);\n        i0.ɵɵtext(8, \" DropzoneJS is an open source library that provides drag\\u2019n\\u2019drop file uploads with image previews. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", null, 7)(11, \"ngx-dropzone\", 8);\n        i0.ɵɵlistener(\"change\", function UploadComponent_Template_ngx_dropzone_change_11_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵelementStart(12, \"ngx-dropzone-label\");\n        i0.ɵɵelement(13, \"i\", 9);\n        i0.ɵɵelementStart(14, \"h3\");\n        i0.ɵɵtext(15, \"Drop files here or click to upload.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"span\", 10);\n        i0.ɵɵtext(17, \"(This is just a demo dropzone. Selected files are \");\n        i0.ɵɵelementStart(18, \"strong\");\n        i0.ɵɵtext(19, \"not\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" actually uploaded.)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 11);\n        i0.ɵɵtemplate(22, UploadComponent_div_22_Template, 14, 4, \"div\", 12);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"breadcrumbItems\", ctx.pageTitle);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.files);\n      }\n    },\n    directives: [i2.PageTitleComponent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.NgxDropzoneComponent, i4.NgxDropzoneLabelDirective, i5.NgForOf],\n    styles: [\"\"]\n  });\n  return UploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}