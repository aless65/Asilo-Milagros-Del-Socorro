{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst rotate = {\n  'asc': 'desc',\n  'desc': '',\n  '': 'asc'\n};\nexport let NgbSortableHeaderDirective = /*#__PURE__*/(() => {\n  class NgbSortableHeaderDirective {\n    constructor() {\n      this.sortable = '';\n      this.direction = '';\n      this.sort = new EventEmitter();\n    }\n    /**\r\n     *  toggles sort direction\r\n     */\n\n\n    rotate() {\n      this.direction = rotate[this.direction];\n      this.sort.emit({\n        column: this.sortable,\n        direction: this.direction\n      });\n    }\n\n  }\n\n  NgbSortableHeaderDirective.ɵfac = function NgbSortableHeaderDirective_Factory(t) {\n    return new (t || NgbSortableHeaderDirective)();\n  };\n\n  NgbSortableHeaderDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: NgbSortableHeaderDirective,\n    selectors: [[\"th\", \"sortable\", \"\"]],\n    hostVars: 4,\n    hostBindings: function NgbSortableHeaderDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbSortableHeaderDirective_click_HostBindingHandler() {\n          return ctx.rotate();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"sorting_asc\", ctx.direction === \"asc\")(\"sorting_desc\", ctx.direction === \"desc\");\n      }\n    },\n    inputs: {\n      sortable: \"sortable\",\n      direction: \"direction\"\n    },\n    outputs: {\n      sort: \"sort\"\n    }\n  });\n  return NgbSortableHeaderDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}