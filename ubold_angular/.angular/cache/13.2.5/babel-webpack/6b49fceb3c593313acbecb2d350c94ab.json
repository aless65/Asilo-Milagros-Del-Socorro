{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport { LAYOUT_DETACHED, LAYOUT_HORIZONTAL, LAYOUT_TWO_COLUMN_MENU, LAYOUT_VERTICAL, LAYOUT_WIDTH_BOXED, LEFT_SIDEBAR_TYPE_CONDENSED, LEFT_SIDEBAR_TYPE_DEFAULT } from './shared/config/layout.model';\nimport { getLayoutConfig } from './shared/helper/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/service/event.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./vertical/layout/layout.component\";\nimport * as i4 from \"./horizontal/layout/layout.component\";\nimport * as i5 from \"./detached/layout/layout.component\";\nimport * as i6 from \"./two-column-menu/layout/layout.component\";\n\nfunction LayoutContainerComponent_app_vertical_layout_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-vertical-layout\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layoutWidth\", ctx_r0.layoutWidth)(\"layoutColor\", ctx_r0.layoutColor);\n  }\n}\n\nfunction LayoutContainerComponent_app_horizontal_layout_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-horizontal-layout\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layoutColor\", ctx_r1.layoutColor)(\"layoutWidth\", ctx_r1.layoutWidth);\n  }\n}\n\nfunction LayoutContainerComponent_app_detached_layout_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-detached-layout\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layoutWidth\", ctx_r2.layoutWidth)(\"layoutColor\", ctx_r2.layoutColor);\n  }\n}\n\nfunction LayoutContainerComponent_app_two_column_menu_layout_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-two-column-menu-layout\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"layoutWidth\", ctx_r3.layoutWidth)(\"layoutColor\", ctx_r3.layoutColor);\n  }\n}\n\nexport let LayoutContainerComponent = /*#__PURE__*/(() => {\n  class LayoutContainerComponent {\n    constructor(eventService) {\n      this.eventService = eventService;\n      this.configuredDemo = \"default\";\n    }\n\n    ngOnInit() {\n      // default settings\n      this.configuredDemo = environment.demo; // tslint:disable-next-line: max-line-length\n\n      this.layoutType = this.configuredDemo === 'creative' ? LAYOUT_HORIZONTAL : this.configuredDemo === 'modern' ? LAYOUT_DETACHED : this.configuredDemo === 'saas' ? LAYOUT_TWO_COLUMN_MENU : LAYOUT_VERTICAL;\n      this.setLayoutConfig(); // listen to event and change the layout configuarations\n\n      this.eventService.subscribe('changeLayout', layout => {\n        this.layoutType = layout;\n        this.setLayoutConfig();\n      });\n      this.eventService.subscribe('changeLayoutColor', color => {\n        setTimeout(() => {\n          this.layoutColor = color;\n        }, 20);\n      });\n      this.eventService.subscribe('changeLayoutWidth', width => {\n        setTimeout(() => {\n          this.layoutWidth = width;\n\n          if (this.layoutWidth === LAYOUT_WIDTH_BOXED) {\n            this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_CONDENSED);\n          } else {\n            this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_DEFAULT);\n          }\n        }, 20);\n      });\n      this.updateDimensions();\n    }\n\n    ngAfterViewInit() {\n      document.body.classList.remove('authentication-bg', 'authentication-bg-pattern', 'auth-fluid-pages', 'pb-0');\n    }\n    /**\r\n     * set layout config\r\n     */\n\n\n    setLayoutConfig() {\n      this.layoutConfig = getLayoutConfig(this.layoutType);\n      this.layoutWidth = this.layoutConfig.layoutWidth;\n      this.layoutColor = this.layoutConfig.layoutColor;\n    }\n    /**\r\n    * changes left sidebar type based on screen dimensions\r\n    */\n\n\n    updateDimensions() {\n      if (this.layoutType !== LAYOUT_TWO_COLUMN_MENU) {\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n          this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_CONDENSED);\n        } else if (window.innerWidth > 1028) {\n          this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_DEFAULT);\n        }\n      }\n    }\n    /**\r\n     * Check if the vertical layout is requested\r\n     */\n\n\n    isVerticalLayoutRequested() {\n      return this.layoutType === LAYOUT_VERTICAL;\n    }\n    /**\r\n     * Check if the horizontal layout is requested\r\n     */\n\n\n    isHorizontalLayoutRequested() {\n      return this.layoutType === LAYOUT_HORIZONTAL;\n    }\n    /**\r\n     * Check if the detached layout is requested\r\n     */\n\n\n    isDetachedLayoutRequested() {\n      return this.layoutType === LAYOUT_DETACHED;\n    }\n    /**\r\n     * Check if two column layout is requested\r\n     */\n\n\n    isTwoColumnMenuLayoutRequested() {\n      return this.layoutType === LAYOUT_TWO_COLUMN_MENU;\n    }\n\n  }\n\n  LayoutContainerComponent.ɵfac = function LayoutContainerComponent_Factory(t) {\n    return new (t || LayoutContainerComponent)(i0.ɵɵdirectiveInject(i1.EventService));\n  };\n\n  LayoutContainerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutContainerComponent,\n    selectors: [[\"app-layout-container\"]],\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"layoutWidth\", \"layoutColor\", 4, \"ngIf\"], [3, \"layoutColor\", \"layoutWidth\", 4, \"ngIf\"], [3, \"layoutWidth\", \"layoutColor\"], [3, \"layoutColor\", \"layoutWidth\"]],\n    template: function LayoutContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LayoutContainerComponent_app_vertical_layout_0_Template, 1, 2, \"app-vertical-layout\", 0);\n        i0.ɵɵtemplate(1, LayoutContainerComponent_app_horizontal_layout_1_Template, 1, 2, \"app-horizontal-layout\", 1);\n        i0.ɵɵtemplate(2, LayoutContainerComponent_app_detached_layout_2_Template, 1, 2, \"app-detached-layout\", 0);\n        i0.ɵɵtemplate(3, LayoutContainerComponent_app_two_column_menu_layout_3_Template, 1, 2, \"app-two-column-menu-layout\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isVerticalLayoutRequested());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isHorizontalLayoutRequested());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDetachedLayoutRequested());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isTwoColumnMenuLayoutRequested());\n      }\n    },\n    directives: [i2.NgIf, i3.VerticalLayoutComponent, i4.HorizontalLayoutComponent, i5.DetachedLayoutComponent, i6.TwoColumnMenuLayoutComponent],\n    styles: [\"\"]\n  });\n  return LayoutContainerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}