{"ast":null,"code":"import { FullCalendarModule } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin, { Draggable } from '@fullcalendar/interaction';\nimport bootstrapPlugin from '@fullcalendar/bootstrap';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list';\nimport { CALENDAREVENTS, EXTERNALEVENTS } from './shared/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/page-title/page-title.component\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@fullcalendar/angular\";\nimport * as i4 from \"./event/event.component\";\nconst _c0 = [\"calendar\"];\nconst _c1 = [\"eventModal\"];\n\nfunction CalendarComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"i\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const event_r3 = ctx.$implicit;\n    i0.ɵɵclassMapInterpolate1(\"external-event bg-\", event_r3.type, \"\");\n    i0.ɵɵattribute(\"data-type\", event_r3.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", event_r3.title, \" \");\n  }\n}\n\nexport let CalendarComponent = /*#__PURE__*/(() => {\n  class CalendarComponent {\n    constructor() {\n      this.pageTitle = [];\n      this.calendarOptions = {};\n      this.calendarEventsData = [];\n      this.selectedDay = {};\n      this.isEditable = false;\n      this.event = {};\n      this.externalEvents = [];\n    }\n\n    ngOnInit() {\n      this.pageTitle = [{\n        label: 'Apps',\n        path: '/'\n      }, {\n        label: 'Calendar',\n        path: '/',\n        active: true\n      }];\n\n      this._fetchData();\n\n      this.initCalendar();\n    }\n\n    ngAfterViewInit() {\n      new Draggable(document.getElementById('external-events'), {\n        itemSelector: '.external-event'\n      });\n    }\n    /**\r\n     * initialize calendar config\r\n     */\n\n\n    initCalendar() {\n      FullCalendarModule.registerPlugins([dayGridPlugin, interactionPlugin, bootstrapPlugin, timeGridPlugin, listPlugin]); // full calendar config\n\n      this.calendarOptions = {\n        themeSystem: 'bootstrap',\n        bootstrapFontAwesome: false,\n        buttonText: {\n          today: 'Today',\n          month: 'Month',\n          week: 'Week',\n          day: 'Day',\n          list: 'List',\n          prev: 'Prev',\n          next: 'Next'\n        },\n        initialView: 'dayGridMonth',\n        handleWindowResize: true,\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n        },\n        events: [...this.calendarEventsData],\n        editable: true,\n        droppable: true,\n        selectable: true,\n        dateClick: this.handleDateClick.bind(this),\n        eventClick: this.handleEventClick.bind(this),\n        drop: this.onDrop.bind(this),\n        eventDrop: this.onEventDrop.bind(this)\n      };\n    }\n    /**\r\n     * fetches events\r\n     */\n\n\n    _fetchData() {\n      this.calendarEventsData = CALENDAREVENTS;\n      this.externalEvents = EXTERNALEVENTS;\n    }\n    /**\r\n     * Opens event modal\r\n     * @param title title of modal\r\n     * @param data data to be used in modal\r\n     */\n\n\n    openEventModal(title = \"\", data = {}) {\n      this.eventModal.openModal(title, data);\n    }\n    /**\r\n     * Creates new event for today\r\n     */\n\n\n    createNewEvent() {\n      this.event = {\n        id: String(this.calendarEventsData.length + 1),\n        title: '',\n        classNames: '',\n        category: 'bg-danger',\n        start: new Date()\n      };\n      this.isEditable = false;\n      this.openEventModal('Add New Event', this.event);\n    }\n    /**\r\n     * adds external events by Drag n Drop\r\n     * @param event dropped event\r\n     */\n\n\n    onDrop(event) {\n      const draggedEl = event.draggedEl;\n      const newEvent = {\n        id: String(this.calendarEventsData.length + 1),\n        title: draggedEl.innerText,\n        start: event.date,\n        classNames: \"bg-\" + draggedEl.getAttribute('data-type')\n      }; // save new event\n\n      this.calendarEventsData.push(newEvent);\n      this.calendarOptions.events = [...this.calendarEventsData];\n    }\n    /**\r\n     * on event drop between calendar\r\n     */\n\n\n    onEventDrop(arg) {\n      let modifiedEvents = [...this.calendarEventsData];\n      const idx = modifiedEvents.findIndex(e => e['id'] === arg.event.id);\n      modifiedEvents[idx]['title'] = arg.event.title;\n      modifiedEvents[idx]['className'] = arg.event.classNames;\n      modifiedEvents[idx]['start'] = arg.event.start;\n      modifiedEvents[idx]['end'] = arg.event.end;\n      this.calendarEventsData = modifiedEvents;\n      this.isEditable = false;\n    }\n\n    /**\r\n     * Handling date click on calendar\r\n     * @param arg DateClickArg\r\n     */\n    handleDateClick(arg) {\n      this.selectedDay = arg;\n      this.event = {\n        id: String(this.calendarEventsData.length + 1),\n        title: '',\n        classNames: '',\n        category: 'bg-danger',\n        start: this.selectedDay.date\n      };\n      this.isEditable = false;\n      this.openEventModal('Add New Event', this.event);\n    }\n    /**\r\n     * Handling click on event on calendar\r\n     * @param arg EventClickArg\r\n     */\n\n\n    handleEventClick(arg) {\n      const event = arg.event;\n      this.event = {\n        id: String(event.id),\n        title: event.title,\n        classNames: event.classNames,\n        category: event.classNames[0]\n      };\n      this.isEditable = true;\n      this.openEventModal('Edit Event', this.event);\n    }\n    /**\r\n     * Handle the event save\r\n     * @param newEvent new event\r\n     */\n\n\n    handleEventSave(newEvent) {\n      if (this.isEditable) {\n        let modifiedEvents = [...this.calendarEventsData];\n        const eventIndex = modifiedEvents.findIndex(event => event.id === newEvent.id);\n        this.calendarEventsData[eventIndex].title = newEvent.title;\n        this.calendarEventsData[eventIndex].classNames = newEvent.category;\n        this.calendarEventsData = modifiedEvents;\n        this.isEditable = false;\n      } else {\n        let nEvent = {\n          id: newEvent.id,\n          title: newEvent.title,\n          start: newEvent.start,\n          classNames: newEvent.category\n        };\n        this.calendarEventsData.push(nEvent);\n      }\n\n      this.calendarOptions.events = [...this.calendarEventsData];\n    }\n    /**\r\n     * Deletes calendar event\r\n     * @param deleteEvent event to be deleted\r\n     */\n\n\n    handleEventDelete(deleteEvent) {\n      let modifiedEvents = [...this.calendarEventsData];\n      const eventIndex = modifiedEvents.findIndex(event => event.id === deleteEvent.id);\n      modifiedEvents.splice(eventIndex, 1);\n      this.calendarEventsData = modifiedEvents;\n      this.calendarOptions.events = [...this.calendarEventsData];\n    }\n\n  }\n\n  CalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n    return new (t || CalendarComponent)();\n  };\n\n  CalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalendarComponent,\n    selectors: [[\"app-calendar\"]],\n    viewQuery: function CalendarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.calendarComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.eventModal = _t.first);\n      }\n    },\n    decls: 31,\n    vars: 3,\n    consts: [[\"title\", \"Calendar\", 3, \"breadcrumbItems\"], [1, \"row\"], [1, \"col-12\"], [1, \"card\"], [1, \"card-body\"], [1, \"col-lg-3\"], [\"id\", \"btn-new-event\", 1, \"btn\", \"btn-lg\", \"font-16\", \"btn-primary\", \"w-100\", 3, \"click\"], [1, \"mdi\", \"mdi-plus-circle-outline\"], [\"id\", \"external-events\"], [1, \"text-muted\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-5\", \"d-none\", \"d-xl-block\"], [1, \"text-center\"], [1, \"ps-3\"], [1, \"text-muted\", \"mb-3\"], [1, \"col-lg-9\"], [\"id\", \"calendar\"], [3, \"options\"], [\"calendar\", \"\"], [3, \"eventSaved\", \"eventDeleted\"], [\"eventModal\", \"\"], [1, \"mdi\", \"mdi-checkbox-blank-circle\", \"me-2\", \"vertical-middle\"]],\n    template: function CalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-page-title\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 1)(6, \"div\", 5)(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_7_listener() {\n          return ctx.createNewEvent();\n        });\n        i0.ɵɵelement(8, \"i\", 7);\n        i0.ɵɵtext(9, \" Create New Event\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"p\", 9);\n        i0.ɵɵtext(13, \"Drag and drop your event or click in the calendar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, CalendarComponent_div_14_Template, 3, 5, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"h5\", 12);\n        i0.ɵɵtext(17, \"How It Works ?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ul\", 13)(19, \"li\", 14);\n        i0.ɵɵtext(20, \" It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"li\", 14);\n        i0.ɵɵtext(22, \" Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"li\", 14);\n        i0.ɵɵtext(24, \" It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(25, \"div\", 15)(26, \"div\", 16);\n        i0.ɵɵelement(27, \"full-calendar\", 17, 18);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(29, \"app-calendar-event\", 19, 20);\n        i0.ɵɵlistener(\"eventSaved\", function CalendarComponent_Template_app_calendar_event_eventSaved_29_listener($event) {\n          return ctx.handleEventSave($event);\n        })(\"eventDeleted\", function CalendarComponent_Template_app_calendar_event_eventDeleted_29_listener($event) {\n          return ctx.handleEventDelete($event);\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"breadcrumbItems\", ctx.pageTitle);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.externalEvents);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"options\", ctx.calendarOptions);\n      }\n    },\n    directives: [i1.PageTitleComponent, i2.NgForOf, i3.FullCalendarComponent, i4.CalendarEventComponent],\n    styles: [\"\"]\n  });\n  return CalendarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}