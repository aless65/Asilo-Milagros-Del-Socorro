{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  return (__assign = Object.assign || function (t) {\n    for (var i, a = 1, n = arguments.length; a < n; a++) for (var s in i = arguments[a]) Object.prototype.hasOwnProperty.call(i, s) && (t[s] = i[s]);\n\n    return t;\n  }).apply(this, arguments);\n},\n    CountUp = function () {\n  function t(t, i, a) {\n    var n = this;\n    this.endVal = i, this.options = a, this.version = \"2.1.0\", this.defaults = {\n      startVal: 0,\n      decimalPlaces: 0,\n      duration: 2,\n      useEasing: !0,\n      useGrouping: !0,\n      smartEasingThreshold: 999,\n      smartEasingAmount: 333,\n      separator: \",\",\n      decimal: \".\",\n      prefix: \"\",\n      suffix: \"\",\n      enableScrollSpy: !1,\n      scrollSpyDelay: 200\n    }, this.finalEndVal = null, this.useEasing = !0, this.countDown = !1, this.error = \"\", this.startVal = 0, this.paused = !0, this.count = function (t) {\n      n.startTime || (n.startTime = t);\n      var i = t - n.startTime;\n      n.remaining = n.duration - i, n.useEasing ? n.countDown ? n.frameVal = n.startVal - n.easingFn(i, 0, n.startVal - n.endVal, n.duration) : n.frameVal = n.easingFn(i, n.startVal, n.endVal - n.startVal, n.duration) : n.countDown ? n.frameVal = n.startVal - (n.startVal - n.endVal) * (i / n.duration) : n.frameVal = n.startVal + (n.endVal - n.startVal) * (i / n.duration), n.countDown ? n.frameVal = n.frameVal < n.endVal ? n.endVal : n.frameVal : n.frameVal = n.frameVal > n.endVal ? n.endVal : n.frameVal, n.frameVal = Number(n.frameVal.toFixed(n.options.decimalPlaces)), n.printValue(n.frameVal), i < n.duration ? n.rAF = requestAnimationFrame(n.count) : null !== n.finalEndVal ? n.update(n.finalEndVal) : n.callback && n.callback();\n    }, this.formatNumber = function (t) {\n      var i,\n          a,\n          s,\n          e,\n          r = t < 0 ? \"-\" : \"\";\n      i = Math.abs(t).toFixed(n.options.decimalPlaces);\n      var o = (i += \"\").split(\".\");\n\n      if (a = o[0], s = o.length > 1 ? n.options.decimal + o[1] : \"\", n.options.useGrouping) {\n        e = \"\";\n\n        for (var l = 0, h = a.length; l < h; ++l) 0 !== l && l % 3 == 0 && (e = n.options.separator + e), e = a[h - l - 1] + e;\n\n        a = e;\n      }\n\n      return n.options.numerals && n.options.numerals.length && (a = a.replace(/[0-9]/g, function (t) {\n        return n.options.numerals[+t];\n      }), s = s.replace(/[0-9]/g, function (t) {\n        return n.options.numerals[+t];\n      })), r + n.options.prefix + a + s + n.options.suffix;\n    }, this.easeOutExpo = function (t, i, a, n) {\n      return a * (1 - Math.pow(2, -10 * t / n)) * 1024 / 1023 + i;\n    }, this.options = __assign(__assign({}, this.defaults), a), this.formattingFn = this.options.formattingFn ? this.options.formattingFn : this.formatNumber, this.easingFn = this.options.easingFn ? this.options.easingFn : this.easeOutExpo, this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.endVal = this.validateValue(i), this.options.decimalPlaces = Math.max(this.options.decimalPlaces), this.resetDuration(), this.options.separator = String(this.options.separator), this.useEasing = this.options.useEasing, \"\" === this.options.separator && (this.options.useGrouping = !1), this.el = \"string\" == typeof t ? document.getElementById(t) : t, this.el ? this.printValue(this.startVal) : this.error = \"[CountUp] target is null or undefined\", void 0 !== window && this.options.enableScrollSpy && (this.error ? console.error(this.error, t) : (window.onScrollFns = window.onScrollFns || [], window.onScrollFns.push(function () {\n      return n.handleScroll(n);\n    }), window.onscroll = function () {\n      window.onScrollFns.forEach(function (t) {\n        return t();\n      });\n    }, this.handleScroll(this)));\n  }\n\n  return t.prototype.handleScroll = function (t) {\n    if (t && window) {\n      var i = window.innerHeight + window.scrollY,\n          a = t.el.offsetTop + t.el.offsetHeight;\n      a < i && a > window.scrollY && t.paused ? (t.paused = !1, setTimeout(function () {\n        return t.start();\n      }, t.options.scrollSpyDelay)) : window.scrollY > a && !t.paused && t.reset();\n    }\n  }, t.prototype.determineDirectionAndSmartEasing = function () {\n    var t = this.finalEndVal ? this.finalEndVal : this.endVal;\n    this.countDown = this.startVal > t;\n    var i = t - this.startVal;\n\n    if (Math.abs(i) > this.options.smartEasingThreshold) {\n      this.finalEndVal = t;\n      var a = this.countDown ? 1 : -1;\n      this.endVal = t + a * this.options.smartEasingAmount, this.duration = this.duration / 2;\n    } else this.endVal = t, this.finalEndVal = null;\n\n    this.finalEndVal ? this.useEasing = !1 : this.useEasing = this.options.useEasing;\n  }, t.prototype.start = function (t) {\n    this.error || (this.callback = t, this.duration > 0 ? (this.determineDirectionAndSmartEasing(), this.paused = !1, this.rAF = requestAnimationFrame(this.count)) : this.printValue(this.endVal));\n  }, t.prototype.pauseResume = function () {\n    this.paused ? (this.startTime = null, this.duration = this.remaining, this.startVal = this.frameVal, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count)) : cancelAnimationFrame(this.rAF), this.paused = !this.paused;\n  }, t.prototype.reset = function () {\n    cancelAnimationFrame(this.rAF), this.paused = !0, this.resetDuration(), this.startVal = this.validateValue(this.options.startVal), this.frameVal = this.startVal, this.printValue(this.startVal);\n  }, t.prototype.update = function (t) {\n    cancelAnimationFrame(this.rAF), this.startTime = null, this.endVal = this.validateValue(t), this.endVal !== this.frameVal && (this.startVal = this.frameVal, this.finalEndVal || this.resetDuration(), this.finalEndVal = null, this.determineDirectionAndSmartEasing(), this.rAF = requestAnimationFrame(this.count));\n  }, t.prototype.printValue = function (t) {\n    var i = this.formattingFn(t);\n    \"INPUT\" === this.el.tagName ? this.el.value = i : \"text\" === this.el.tagName || \"tspan\" === this.el.tagName ? this.el.textContent = i : this.el.innerHTML = i;\n  }, t.prototype.ensureNumber = function (t) {\n    return \"number\" == typeof t && !isNaN(t);\n  }, t.prototype.validateValue = function (t) {\n    var i = Number(t);\n    return this.ensureNumber(i) ? i : (this.error = \"[CountUp] invalid start or end value: \" + t, null);\n  }, t.prototype.resetDuration = function () {\n    this.startTime = null, this.duration = 1e3 * Number(this.options.duration), this.remaining = this.duration;\n  }, t;\n}();\n\nexport { CountUp };","map":null,"metadata":{},"sourceType":"module"}