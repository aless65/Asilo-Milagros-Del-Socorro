/**
 * @fileoverview added by tsickle
 * Generated from: lib/select2.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CdkConnectedOverlay, } from '@angular/cdk/overlay';
import { ViewportRuler } from '@angular/cdk/scrolling';
import { Attribute, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, Optional, Output, Self, TemplateRef, ViewChild, ViewChildren, } from '@angular/core';
import { FormGroupDirective, NgControl, NgForm } from '@angular/forms';
import { Subject } from 'rxjs';
import { timeout } from './select2-const';
import { Select2Utils } from './select2-utils';
/** @type {?} */
let nextUniqueId = 0;
/** @type {?} */
const displaySearchStatusList = ['default', 'hidden', 'always'];
export class Select2 {
    /**
     * @param {?} _viewportRuler
     * @param {?} _changeDetectorRef
     * @param {?} _parentForm
     * @param {?} _parentFormGroup
     * @param {?} _control
     * @param {?} tabIndex
     */
    constructor(_viewportRuler, _changeDetectorRef, _parentForm, _parentFormGroup, _control, tabIndex) {
        this._viewportRuler = _viewportRuler;
        this._changeDetectorRef = _changeDetectorRef;
        this._parentForm = _parentForm;
        this._parentFormGroup = _parentFormGroup;
        this._control = _control;
        this.minCharForSearch = 0;
        this.limitSelection = 0;
        this.listPosition = 'below';
        /**
         * use the material style
         */
        this.styleMode = 'default';
        /**
         * maximum results limit (0 = no limit)
         */
        this.maxResults = 0;
        /**
         * message when maximum results
         */
        this.maxResultsMessage = 'Too many resultsâ€¦';
        /**
         * infinite scroll distance
         */
        this.infiniteScrollDistance = 1.5;
        /**
         * infinite scroll distance
         */
        this.infiniteScrollThrottle = 150;
        /**
         * the max height of the results container when opening the select
         */
        this.resultMaxHeight = '200px';
        this.update = new EventEmitter();
        this.open = new EventEmitter();
        this.close = new EventEmitter();
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
        this.search = new EventEmitter();
        this.scroll = new EventEmitter();
        this.removeOption = new EventEmitter();
        this.option = null;
        this.isOpen = false;
        /**
         * Whether the element is focused or not.
         */
        this.focused = false;
        this.hoveringValue = null;
        this.innerSearchText = '';
        this._stateChanges = new Subject();
        this._disabled = false;
        this._required = false;
        this._readonly = false;
        this._multiple = false;
        this._overlay = false;
        this._resettable = false;
        this._hideSelectedItems = false;
        this._clickDetection = false;
        this._uid = `select2-${nextUniqueId++}`;
        this._infiniteScroll = true;
        /**
         * View -> model callback called when select has been touched
         */
        this._onTouched = (/**
         * @return {?}
         */
        () => {
            // do nothing
        });
        /**
         * View -> model callback called when value changes
         */
        this._onChange = (/**
         * @return {?}
         */
        () => {
            // do nothing
        });
        this.id = this.id;
        this._tabIndex = parseInt(tabIndex, 10) || 0;
        if (this._control) {
            this._control.valueAccessor = this;
        }
        this._clickDetectionFc = this.clickDetection.bind(this);
    }
    /**
     * data of options & optiongrps
     * @param {?} data
     * @return {?}
     */
    set data(data) {
        this._data = data;
        this.updateFilteredData();
    }
    /**
     * @return {?}
     */
    get multiple() {
        return this._multiple;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set multiple(value) {
        this._multiple = this._coerceBooleanProperty(value);
        this.ngOnInit();
    }
    /**
     * use the material style
     * @return {?}
     */
    get overlay() {
        return this._overlay;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set overlay(value) {
        this._overlay = this._coerceBooleanProperty(value);
    }
    /**
     * infinite scroll activated
     * @return {?}
     */
    get infiniteScroll() {
        return this._infiniteScroll;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set infiniteScroll(value) {
        this._infiniteScroll = this._coerceBooleanProperty(value);
    }
    /**
     * @return {?}
     */
    get select2Options() {
        return this.multiple ? ((/** @type {?} */ (this.option))) : null;
    }
    /**
     * @return {?}
     */
    get select2Option() {
        return this.multiple ? null : ((/** @type {?} */ (this.option)));
    }
    /**
     * @return {?}
     */
    get searchText() {
        return this.innerSearchText;
    }
    /**
     * @param {?} text
     * @return {?}
     */
    set searchText(text) {
        if (this.customSearchEnabled) {
            this.search.emit({
                component: this,
                value: this._value,
                search: text,
            });
        }
        this.innerSearchText = text;
    }
    /**
     * minimal data of show the search field
     * @return {?}
     */
    get minCountForSearch() {
        return this._minCountForSearch;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set minCountForSearch(value) {
        this._minCountForSearch = value;
        this.updateSearchBox();
    }
    /**
     * Unique id of the element.
     * @return {?}
     */
    get id() {
        return this._id;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set id(value) {
        this._id = value || this._uid;
    }
    /**
     * Whether the element is required.
     * @return {?}
     */
    get required() {
        return this._required;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set required(value) {
        this._required = this._coerceBooleanProperty(value);
    }
    /**
     * Whether selected items should be hidden.
     * @return {?}
     */
    get disabled() {
        return this._control ? this._control.disabled : this._disabled;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set disabled(value) {
        this._disabled = this._coerceBooleanProperty(value);
    }
    /**
     * Whether items are hidden when has.
     * @return {?}
     */
    get hideSelectedItems() {
        return this._hideSelectedItems;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set hideSelectedItems(value) {
        this._hideSelectedItems = this._coerceBooleanProperty(value);
    }
    /**
     * Whether the element is readonly.
     * @return {?}
     */
    get readonly() {
        return this._readonly;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set readonly(value) {
        this._readonly = this._coerceBooleanProperty(value);
    }
    /**
     * The input element's value.
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        if (this.testValueChange(this._value, value)) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                this._value = value;
                this.writeValue(value);
            }), 10);
        }
    }
    /**
     * Tab index for the select2 element.
     * @return {?}
     */
    get tabIndex() {
        return this.disabled ? -1 : this._tabIndex;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set tabIndex(value) {
        if (typeof value !== 'undefined') {
            this._tabIndex = value;
        }
    }
    /**
     * reset with no selected value
     * @return {?}
     */
    get resettable() {
        return this._resettable;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set resettable(value) {
        this._resettable = this._coerceBooleanProperty(value);
    }
    /**
     * @return {?}
     */
    get ariaInvalid() {
        return this._isErrorState();
    }
    /**
     * @return {?}
     */
    get classMaterial() {
        return this.styleMode === 'material';
    }
    /**
     * @return {?}
     */
    get classNostyle() {
        return this.styleMode === 'noStyle';
    }
    /**
     * @return {?}
     */
    get select2above() {
        return !this.overlay ? this.listPosition === 'above' : this._isAbobeOverlay();
    }
    /**
     * @return {?}
     */
    get _positions() {
        if (this.listPosition === 'auto') {
            [
                {
                    originX: 'start',
                    originY: 'bottom',
                    overlayX: 'start',
                    overlayY: 'bottom',
                },
                {
                    originX: 'start',
                    originY: 'top',
                    overlayX: 'start',
                    overlayY: 'top',
                },
            ];
        }
        else {
            return null;
        }
    }
    /**
     * @private
     * @return {?}
     */
    get resultsElement() {
        var _a;
        return (_a = this.resultContainer) === null || _a === void 0 ? void 0 : _a.nativeElement;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this._viewportRuler.change(100).subscribe((/**
         * @return {?}
         */
        () => {
            if (this.isOpen) {
                this.triggerRect();
            }
        }));
        /** @type {?} */
        const option = Select2Utils.getOptionsByValue(this._data, this._control ? this._control.value : this.value, this.multiple);
        if (option !== null) {
            this.option = option;
        }
        if (!Array.isArray(option)) {
            this.hoveringValue = (/** @type {?} */ (this.value));
        }
        this.updateSearchBox();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.cdkConnectedOverlay.positionChange.subscribe((/**
         * @param {?} posChange
         * @return {?}
         */
        (posChange) => {
            var _a;
            if (this.listPosition === 'auto' && ((_a = posChange.connectionPair) === null || _a === void 0 ? void 0 : _a.originY) &&
                this._overlayPosition !== posChange.connectionPair.originY) {
                this.triggerRect();
                this._overlayPosition = posChange.connectionPair.originY;
                this._changeDetectorRef.detectChanges();
            }
        }));
        this.selectionElement = this.selection.nativeElement;
        this.triggerRect();
    }
    /**
     * @return {?}
     */
    ngDoCheck() {
        var _a;
        this.updateSearchBox();
        this._dirtyCheckNativeValue();
        if (this._triggerRect) {
            if (this.overlayWidth !== this._triggerRect.width) {
                this.overlayWidth = this._triggerRect.width;
            }
            if (((_a = this._dropdownRect) === null || _a === void 0 ? void 0 : _a.height) > 0 && this.overlayHeight !== this._dropdownRect.height) {
                this.overlayHeight = this.listPosition === 'auto' ? this._dropdownRect.height : 0;
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        window.document.body.removeEventListener('click', this._clickDetectionFc);
    }
    /**
     * @return {?}
     */
    updateSearchBox() {
        /** @type {?} */
        const hidden = this.customSearchEnabled
            ? false
            : Select2Utils.isSearchboxHiddex(this._data, this._minCountForSearch);
        if (this.isSearchboxHidden !== hidden) {
            this.isSearchboxHidden = hidden;
        }
    }
    /**
     * @return {?}
     */
    hideSearch() {
        /** @type {?} */
        const displaySearchStatus = displaySearchStatusList.indexOf(this.displaySearchStatus) > -1 ? this.displaySearchStatus : 'default';
        return (displaySearchStatus === 'default' && this.isSearchboxHidden) || displaySearchStatus === 'hidden';
    }
    /**
     * @param {?} option
     * @return {?}
     */
    getOptionStyle(option) {
        return ('select2-results__option ' +
            (option.hide ? 'select2-results__option--hide ' : '') +
            (option.value === this.hoveringValue ? 'select2-results__option--highlighted ' : '') +
            (option.classes || ''));
    }
    /**
     * @param {?} option
     * @return {?}
     */
    mouseenter(option) {
        if (!option.disabled) {
            this.hoveringValue = option.value;
        }
    }
    /**
     * @param {?} option
     * @return {?}
     */
    click(option) {
        if (this.testSelection(option)) {
            this.select(option);
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    reset(e) {
        this.select(null);
        e.preventDefault();
        e.stopPropagation();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    prevChange(event) {
        event.stopPropagation();
    }
    /**
     * @return {?}
     */
    toggleOpenAndClose() {
        if (this.disabled) {
            return;
        }
        this._focus(true);
        this.isOpen = !this.isOpen;
        if (this.isOpen) {
            this.innerSearchText = '';
            this.updateFilteredData();
            this._focusSearchboxOrResultsElement();
            setTimeout((/**
             * @return {?}
             */
            () => {
                if (this.option) {
                    /** @type {?} */
                    const option = this.option instanceof Array ? this.option[0] : this.option;
                    this.updateScrollFromOption(option);
                }
                else if (this.resultsElement) {
                    this.resultsElement.scrollTop = 0;
                }
                setTimeout((/**
                 * @return {?}
                 */
                () => {
                    var _a, _b;
                    this.triggerRect();
                    (_b = (_a = this.cdkConnectedOverlay) === null || _a === void 0 ? void 0 : _a.overlayRef) === null || _b === void 0 ? void 0 : _b.updatePosition();
                }), 100);
            }));
            this.open.emit(this);
        }
        else {
            this.close.emit(this);
        }
        if (this.isOpen && !this._clickDetection) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                window.document.body.addEventListener('click', this._clickDetectionFc, false);
                this._clickDetection = true;
            }), timeout);
        }
        this._changeDetectorRef.markForCheck();
    }
    /**
     * @param {?} option
     * @param {?} defaut
     * @return {?}
     */
    hasTemplate(option, defaut) {
        var _a, _b;
        return (this.templates instanceof TemplateRef ||
            ((_a = this.templates) === null || _a === void 0 ? void 0 : _a[option.templateId]) instanceof TemplateRef ||
            ((_b = this.templates) === null || _b === void 0 ? void 0 : _b[defaut]) instanceof TemplateRef);
    }
    /**
     * @param {?} option
     * @param {?} defaut
     * @return {?}
     */
    getTemplate(option, defaut) {
        return this.hasTemplate(option, defaut)
            ? this.templates[option.templateId] || this.templates[defaut] || this.templates
            : undefined;
    }
    /**
     * @return {?}
     */
    triggerRect() {
        var _a;
        this._triggerRect = this.selectionElement.getBoundingClientRect();
        this._dropdownRect = ((_a = this.dropdown) === null || _a === void 0 ? void 0 : _a.nativeElement) ? this.dropdown.nativeElement.getBoundingClientRect()
            : undefined;
    }
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    testSelection(option) {
        if (option.disabled) {
            return false;
        }
        if (!this.multiple ||
            !this.limitSelection ||
            (Array.isArray(this._value) && this._value.length < this.limitSelection)) {
            return true;
        }
        return false;
    }
    /**
     * @private
     * @param {?} value1
     * @param {?} value2
     * @return {?}
     */
    testValueChange(value1, value2) {
        var _a, _b;
        if (((value1 === null || value1 === undefined) && (value2 === null || value2 === undefined)) ||
            value1 === value2) {
            return false;
        }
        if (this.multiple && ((_a = ((/** @type {?} */ (value1)))) === null || _a === void 0 ? void 0 : _a.length) && ((_b = ((/** @type {?} */ (value2)))) === null || _b === void 0 ? void 0 : _b.length) &&
            ((/** @type {?} */ (value1))).length === ((/** @type {?} */ (value2))).length) {
            for (const e1 of (/** @type {?} */ (value1))) {
                /** @type {?} */
                const test = ((/** @type {?} */ (value2))).indexOf(e1) > -1;
                if (!test) {
                    return true;
                }
            }
            return false;
        }
        return true;
    }
    /**
     * @private
     * @return {?}
     */
    updateFilteredData() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            /** @type {?} */
            let result = this._data;
            if (this.multiple && this.hideSelectedItems) {
                result = Select2Utils.getFilteredSelectedData(result, this.option);
            }
            if (!this.customSearchEnabled && this.searchText && this.searchText.length >= +this.minCharForSearch) {
                result = Select2Utils.getFilteredData(result, this.searchText, this.editPattern);
            }
            if (this.maxResults > 0) {
                /** @type {?} */
                const data = Select2Utils.getReduceData(result, +this.maxResults);
                result = data.result;
                this.maxResultsExceeded = data.reduce;
            }
            else {
                this.maxResultsExceeded = false;
            }
            if (Select2Utils.valueIsNotInFilteredData(result, this.hoveringValue)) {
                this.hoveringValue = Select2Utils.getFirstAvailableOption(result);
            }
            this.filteredData = result;
            this._changeDetectorRef.markForCheck();
        }));
    }
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    clickDetection(e) {
        if (!this.ifParentContainsClass((/** @type {?} */ (e.target)), 'selection')) {
            if (this.isOpen && !this.ifParentContainsClass((/** @type {?} */ (e.target)), 'select2-dropdown')) {
                this.toggleOpenAndClose();
            }
            if (!this.ifParentContainsId((/** @type {?} */ (e.target)), this._id)) {
                this.clickExit();
            }
        }
        else if (this.isOpen && !this.ifParentContainsId((/** @type {?} */ (e.target)), this._id)) {
            this.toggleOpenAndClose();
            this.clickExit();
        }
    }
    /**
     * @private
     * @return {?}
     */
    clickExit() {
        this._focus(false);
        window.document.body.removeEventListener('click', this._clickDetectionFc);
        this._clickDetection = false;
    }
    /**
     * @private
     * @param {?} element
     * @param {?} cssClass
     * @return {?}
     */
    ifParentContainsClass(element, cssClass) {
        return this.getParentElementByClass(element, cssClass) !== null;
    }
    /**
     * @private
     * @param {?} element
     * @param {?} id
     * @return {?}
     */
    ifParentContainsId(element, id) {
        return this.getParentElementById(element, id) !== null;
    }
    /**
     * @private
     * @param {?} element
     * @param {?} cssClass
     * @return {?}
     */
    getParentElementByClass(element, cssClass) {
        if (this.containClasses(element, cssClass.trim().split(/\s+/))) {
            return element;
        }
        return element.parentElement ? this.getParentElementByClass(element.parentElement, cssClass) : null;
    }
    /**
     * @private
     * @param {?} element
     * @param {?} id
     * @return {?}
     */
    getParentElementById(element, id) {
        if (element.id === id) {
            return element;
        }
        return element.parentElement ? this.getParentElementById(element.parentElement, id) : null;
    }
    /**
     * @private
     * @param {?} element
     * @param {?} cssClasses
     * @return {?}
     */
    containClasses(element, cssClasses) {
        if (!element.classList) {
            return false;
        }
        for (const cssClass of cssClasses) {
            if (!element.classList.contains(cssClass)) {
                return false;
            }
        }
        return true;
    }
    /**
     * @return {?}
     */
    focusin() {
        if (!this.disabled) {
            this._focus(true);
        }
    }
    /**
     * @return {?}
     */
    focusout() {
        if (this.selectionElement && !this.selectionElement.classList.contains('select2-focused')) {
            this._focus(false);
            this._onTouched();
        }
    }
    /**
     * @param {?} option
     * @return {?}
     */
    select(option) {
        /** @type {?} */
        let value;
        if (option !== null) {
            if (this.multiple) {
                /** @type {?} */
                const options = (/** @type {?} */ (this.option));
                /** @type {?} */
                const index = options.findIndex((/**
                 * @param {?} op
                 * @return {?}
                 */
                op => op.value === option.value));
                if (index === -1) {
                    options.push(option);
                }
                else {
                    options.splice(index, 1);
                }
                value = ((/** @type {?} */ (this.option))).map((/**
                 * @param {?} op
                 * @return {?}
                 */
                op => op.value));
            }
            else {
                this.option = option;
                if (this.isOpen) {
                    this.isOpen = false;
                    this.close.emit(this);
                    if (this.selectionElement) {
                        this.selectionElement.focus();
                    }
                }
                value = this.option.value;
            }
        }
        else {
            this.option = null;
        }
        if (this.multiple && this.hideSelectedItems) {
            this.updateFilteredData();
        }
        if (this._control) {
            this._onChange(value);
        }
        else {
            this._value = value;
        }
        this.update.emit({
            component: this,
            value: value,
            options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,
        });
    }
    /**
     * @param {?} e
     * @return {?}
     */
    keyDown(e) {
        if (this._testKey(e, ['ArrowDown', 40])) {
            this.moveDown();
            e.preventDefault();
        }
        else if (this._testKey(e, ['ArrowUp', 38])) {
            this.moveUp();
            e.preventDefault();
        }
        else if (this._testKey(e, ['Enter', 13])) {
            this.selectByEnter();
            e.preventDefault();
        }
        else if (this._testKey(e, ['Escape', 'Tab', 9, 27]) && this.isOpen) {
            this.toggleOpenAndClose();
            this._focus(false);
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    openKey(e) {
        if (this._testKey(e, ['ArrowDown', 'ArrowUp', 'Enter', 40, 38, 13])) {
            this.toggleOpenAndClose();
            e.preventDefault();
        }
        else if (this._testKey(e, ['Escape', 'Tab', 9, 27])) {
            this._focus(false);
            this._onTouched();
        }
    }
    /**
     * @param {?} _index
     * @param {?} item
     * @return {?}
     */
    trackBy(_index, item) {
        return item.value;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    searchUpdate(e) {
        this.searchText = ((/** @type {?} */ (e.target))).value;
        this.updateFilteredData();
    }
    /**
     * @param {?} option
     * @return {?}
     */
    isSelected(option) {
        return Select2Utils.isSelected(this.option, option, this.multiple);
    }
    /**
     * @param {?} option
     * @return {?}
     */
    isDisabled(option) {
        return option.disabled ? 'true' : 'false';
    }
    /**
     * @param {?} e
     * @param {?} option
     * @return {?}
     */
    removeSelection(e, option) {
        Select2Utils.removeSelection(this.option, option);
        if (this.multiple && this.hideSelectedItems) {
            this.updateFilteredData();
        }
        /** @type {?} */
        const value = ((/** @type {?} */ (this.option))).map((/**
         * @param {?} op
         * @return {?}
         */
        op => op.value));
        if (this._control) {
            this._onChange(value);
        }
        else {
            this._value = value;
        }
        this.update.emit({
            component: this,
            value: value,
            options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,
        });
        this.removeOption.emit({
            component: this,
            value: value,
            removedOption: option,
        });
        e.preventDefault();
        e.stopPropagation();
        if (this.isOpen) {
            this._focusSearchboxOrResultsElement();
        }
    }
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        this._setSelectionByValue(value);
    }
    /**
     * Saves a callback function to be invoked when the select's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the value changes.
     * @return {?}
     */
    registerOnChange(fn) {
        this._onChange = fn;
    }
    /**
     * Saves a callback function to be invoked when the select is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the component has been touched.
     * @return {?}
     */
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    /**
     * Sets whether the component should be disabled.
     * Implemented as part of ControlValueAccessor.
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    /**
     * @param {?} way
     * @return {?}
     */
    onScroll(way) {
        this.scroll.emit({
            component: this,
            way,
            search: this.innerSearchText,
        });
    }
    /**
     * @return {?}
     */
    _isErrorState() {
        /** @type {?} */
        const isInvalid = this._control && this._control.invalid;
        /** @type {?} */
        const isTouched = this._control && this._control.touched;
        /** @type {?} */
        const isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||
            (this._parentForm && this._parentForm.submitted);
        return !!(isInvalid && (isTouched || isSubmitted));
    }
    /**
     * @private
     * @return {?}
     */
    moveUp() {
        this.updateScrollFromOption(Select2Utils.getPreviousOption(this.filteredData, this.hoveringValue));
    }
    /**
     * @private
     * @return {?}
     */
    moveDown() {
        this.updateScrollFromOption(Select2Utils.getNextOption(this.filteredData, this.hoveringValue));
    }
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    updateScrollFromOption(option) {
        if (option) {
            this.hoveringValue = option.value;
            /** @type {?} */
            const domElement = this.results.find((/**
             * @param {?} r
             * @return {?}
             */
            r => r.nativeElement.innerText.trim() === option.label));
            if (domElement && this.resultsElement) {
                this.resultsElement.scrollTop = 0;
                /** @type {?} */
                const listClientRect = this.resultsElement.getBoundingClientRect();
                /** @type {?} */
                const optionClientRect = domElement.nativeElement.getBoundingClientRect();
                this.resultsElement.scrollTop = optionClientRect.top - listClientRect.top;
            }
        }
    }
    /**
     * @private
     * @return {?}
     */
    selectByEnter() {
        if (this.hoveringValue) {
            /** @type {?} */
            const option = Select2Utils.getOptionByValue(this._data, this.hoveringValue);
            this.select(option);
        }
    }
    /**
     * @private
     * @param {?} event
     * @param {?=} refs
     * @return {?}
     */
    _testKey(event, refs = []) {
        return this._isKey(this._getKey(event), refs);
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    _getKey(event) {
        /** @type {?} */
        let code;
        if (event.key !== undefined) {
            code = event.key;
        }
        else if (event['keyIdentifier'] !== undefined) {
            code = event['keyIdentifier'];
        }
        else if (event['keyCode'] !== undefined) {
            code = event['keyCode'];
        }
        else {
            event.preventDefault();
        }
        return code;
    }
    /**
     * @private
     * @param {?} code
     * @param {?=} refs
     * @return {?}
     */
    _isKey(code, refs = []) {
        return refs && refs.length > 0 ? refs.indexOf(code) !== -1 : false;
    }
    /**
     * Sets the selected option based on a value. If no option can be
     * found with the designated value, the select trigger is cleared.
     * @private
     * @param {?} value
     * @return {?}
     */
    _setSelectionByValue(value) {
        if (this.option || (value !== undefined && value !== null)) {
            /** @type {?} */
            const isArray = Array.isArray(value);
            if (this.multiple && value && !isArray) {
                throw new Error('Non array value.');
            }
            else if (this._data) {
                if (this.multiple) {
                    this.option = []; // if value is null, then empty option and return
                    if (isArray) {
                        // value is not null. Preselect value
                        /** @type {?} */
                        const selectedValues = Select2Utils.getOptionsByValue(this._data, value, this.multiple);
                        selectedValues.map((/**
                         * @param {?} item
                         * @return {?}
                         */
                        item => this.select(item)));
                    }
                }
                else {
                    this.select(Select2Utils.getOptionByValue(this._data, value));
                }
            }
            else if (this._control) {
                this._control.viewToModelUpdate(value);
            }
            this._changeDetectorRef.markForCheck();
        }
    }
    /**
     * Does some manual dirty checking on the native input `value` property.
     * @private
     * @return {?}
     */
    _dirtyCheckNativeValue() {
        /** @type {?} */
        const newValue = this.value;
        if (this._previousNativeValue !== newValue) {
            this._previousNativeValue = newValue;
            this._stateChanges.next();
        }
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    _coerceBooleanProperty(value) {
        return value != null && `${value}` !== 'false';
    }
    /**
     * @private
     * @return {?}
     */
    _focusSearchboxOrResultsElement() {
        if (!this.isSearchboxHidden) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                if (this.searchInput && this.searchInput.nativeElement) {
                    this.searchInput.nativeElement.focus();
                }
            }));
        }
        else if (this.resultsElement) {
            this.resultsElement.focus();
        }
    }
    /**
     * @private
     * @param {?} state
     * @return {?}
     */
    _focus(state) {
        if (!state && this.focused) {
            this.focused = state;
            this.blur.emit(this);
        }
        else if (state && !this.focused) {
            this.focused = state;
            this.focus.emit(this);
        }
    }
    /**
     * @private
     * @return {?}
     */
    _isAbobeOverlay() {
        return this.overlay && this._overlayPosition && this.listPosition === 'auto'
            ? this._overlayPosition === 'top'
            : this.listPosition === 'above';
    }
}
Select2.decorators = [
    { type: Component, args: [{
                selector: 'select2',
                template: "<div class=\"select2-label\" (click)=\"toggleOpenAndClose()\">\n    <ng-content select=\"select2-label\"></ng-content>\n    <span *ngIf=\"required\" class=\"select2-required\"></span>\n</div>\n<div\n    class=\"select2 select2-container select2-container--default select2-container--focus\"\n    [class.select2-container--below]=\"!select2above\"\n    [class.select2-container--above]=\"select2above\"\n    [class.select2-container--open]=\"isOpen\"\n    [class.select2-container--disabled]=\"disabled\"\n>\n    <div\n        class=\"selection\"\n        #selection\n        #trigger=\"cdkOverlayOrigin\"\n        [attr.tabindex]=\"!this.isOpen ? tabIndex : '-1'\"\n        (click)=\"toggleOpenAndClose()\"\n        (focus)=\"focusin()\"\n        (blur)=\"focusout()\"\n        (keydown)=\"openKey($event)\"\n        cdkOverlayOrigin\n        [class.select2-focused]=\"focused\"\n    >\n        <div\n            class=\"select2-selection\"\n            [class.select2-selection--multiple]=\"multiple\"\n            [class.select2-selection--single]=\"!multiple\"\n            role=\"combobox\"\n        >\n            <span *ngIf=\"!multiple\" class=\"select2-selection__rendered\" [title]=\"select2Option?.label || ''\">\n                <span *ngIf=\"!select2Option\">&nbsp;</span>\n                <span *ngIf=\"select2Option\" [innerHTML]=\"select2Option.label\"></span>\n                <span [class.select2-selection__placeholder__option]=\"option\" class=\"select2-selection__placeholder\">{{\n                    placeholder\n                }}</span>\n            </span>\n            <span\n                (click)=\"reset($event)\"\n                *ngIf=\"!multiple && resettable && select2Option && !(disabled || readonly)\"\n                class=\"select2-selection__reset\"\n                role=\"presentation\"\n                >\u00D7</span\n            >\n            <span *ngIf=\"!multiple\" class=\"select2-selection__arrow\" role=\"presentation\"> </span>\n            <ul *ngIf=\"multiple\" class=\"select2-selection__rendered\">\n                <span\n                    [class.select2-selection__placeholder__option]=\"select2Options?.length > 0\"\n                    class=\"select2-selection__placeholder\"\n                    >{{ placeholder }}</span\n                >\n                <li *ngFor=\"let op of option; trackBy: trackBy\" class=\"select2-selection__choice\" [title]=\"op.label\">\n                    <span\n                        *ngIf=\"!(disabled || readonly)\"\n                        (click)=\"removeSelection($event, op)\"\n                        class=\"select2-selection__choice__remove\"\n                        role=\"presentation\"\n                        >\u00D7</span\n                    >\n                    <span [innerHTML]=\"op.label\"></span>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <ng-container *ngIf=\"!overlay\">\n        <ng-container *ngTemplateOutlet=\"containerTemplate\"></ng-container>\n    </ng-container>\n\n    <div class=\"select2-subscript-wrapper\">\n        <ng-content select=\"select2-hint\"></ng-content>\n    </div>\n</div>\n\n<ng-template\n    cdkConnectedOverlay\n    cdkConnectedOverlayHasBackdrop\n    cdkConnectedOverlayBackdropClass=\"select2-overlay-backdrop\"\n    [cdkConnectedOverlayOrigin]=\"trigger\"\n    [cdkConnectedOverlayOpen]=\"this.isOpen && overlay\"\n    [cdkConnectedOverlayMinWidth]=\"overlayWidth\"\n    [cdkConnectedOverlayHeight]=\"overlayHeight\"\n    [cdkConnectedOverlayPositions]=\"_positions\"\n    (backdropClick)=\"toggleOpenAndClose()\"\n>\n    <ng-container *ngTemplateOutlet=\"containerTemplate\"></ng-container>\n</ng-template>\n\n<ng-template #containerTemplate>\n    <div\n        class=\"select2-container select2-container--default select2-container-dropdown\"\n        [class.select2-container--open]=\"isOpen\"\n        [class.select2-overlay]=\"overlay\"\n        [class.select2-position-auto]=\"listPosition === 'auto'\"\n    >\n        <div\n            #dropdown\n            class=\"select2-dropdown\"\n            [class.select2-dropdown--below]=\"!select2above\"\n            [class.select2-dropdown--above]=\"select2above\"\n        >\n            <div class=\"select2-search select2-search--dropdown\" [class.select2-search--hide]=\"hideSearch()\">\n                <input\n                    #searchInput\n                    [id]=\"id + '-search-field'\"\n                    [value]=\"searchText\"\n                    (keydown)=\"keyDown($event)\"\n                    (keyup)=\"searchUpdate($event)\"\n                    (change)=\"prevChange($event)\"\n                    class=\"select2-search__field\"\n                    type=\"search\"\n                    role=\"textbox\"\n                    autocomplete=\"off\"\n                    autocorrect=\"off\"\n                    autocapitalize=\"off\"\n                    spellcheck=\"false\"\n                    [attr.tabindex]=\"this.isOpen ? tabIndex : '-1'\"\n                />\n            </div>\n            <div class=\"select2-results\">\n                <ul\n                    #results\n                    class=\"select2-results__options\"\n                    [style.max-height]=\"resultMaxHeight\"\n                    role=\"tree\"\n                    tabindex=\"-1\"\n                    infiniteScroll\n                    [infiniteScrollDisabled]=\"!infiniteScroll && !isOpen\"\n                    [infiniteScrollDistance]=\"infiniteScrollDistance\"\n                    [infiniteScrollThrottle]=\"infiniteScrollThrottle\"\n                    [infiniteScrollContainer]=\"results\"\n                    (scrolled)=\"onScroll('down')\"\n                    (scrolledUp)=\"onScroll('up')\"\n                    (keydown)=\"keyDown($event)\"\n                >\n                    <ng-container *ngFor=\"let groupOrOption of filteredData; index as i; trackBy: trackBy\">\n                        <li *ngIf=\"groupOrOption.options\" class=\"select2-results__option\" role=\"group\">\n                            <strong\n                                *ngIf=\"!hasTemplate(groupOrOption, 'group'); else optGroup\"\n                                [attr.class]=\"\n                                    'select2-results__group' +\n                                    (groupOrOption.classes ? ' ' + groupOrOption.classes : '')\n                                \"\n                                [innerHTML]=\"groupOrOption.label\"\n                            ></strong>\n                            <ng-template #optGroup>\n                                <ng-container\n                                    *ngTemplateOutlet=\"getTemplate(groupOrOption, 'group'); context: groupOrOption\"\n                                >\n                                </ng-container>\n                            </ng-template>\n\n                            <ul class=\"select2-results__options select2-results__options--nested\">\n                                <li\n                                    *ngFor=\"let option of groupOrOption.options; index as j; trackBy: trackBy\"\n                                    #result\n                                    [id]=\"option.id || id + '-option-' + i + '-' + j\"\n                                    [class]=\"getOptionStyle(option)\"\n                                    role=\"treeitem\"\n                                    [attr.aria-selected]=\"isSelected(option)\"\n                                    [attr.aria-disabled]=\"isDisabled(option)\"\n                                    (mouseenter)=\"mouseenter(option)\"\n                                    (click)=\"click(option)\"\n                                >\n                                    <div\n                                        *ngIf=\"!hasTemplate(option, 'option'); else liGroup\"\n                                        class=\"select2-label-content\"\n                                        [innerHTML]=\"option.label\"\n                                    ></div>\n                                    <ng-template #liGroup>\n                                        <ng-container\n                                            *ngTemplateOutlet=\"getTemplate(option, 'option'); context: option\"\n                                        >\n                                        </ng-container>\n                                    </ng-template>\n                                </li>\n                            </ul>\n                        </li>\n                        <li\n                            *ngIf=\"!groupOrOption.options\"\n                            #result\n                            [id]=\"groupOrOption.id || id + '-option-' + i\"\n                            [class]=\"getOptionStyle(groupOrOption)\"\n                            role=\"treeitem\"\n                            [attr.aria-selected]=\"isSelected(groupOrOption)\"\n                            [attr.aria-disabled]=\"isDisabled(groupOrOption)\"\n                            (mouseenter)=\"mouseenter(groupOrOption)\"\n                            (click)=\"click(groupOrOption)\"\n                        >\n                            <div\n                                *ngIf=\"!hasTemplate(groupOrOption, 'option'); else li\"\n                                [innerHTML]=\"groupOrOption.label\"\n                                class=\"select2-label-content\"\n                            ></div>\n                            <ng-template #li>\n                                <ng-container\n                                    *ngTemplateOutlet=\"getTemplate(groupOrOption, 'option'); context: groupOrOption\"\n                                >\n                                </ng-container>\n                            </ng-template>\n                        </li>\n                    </ng-container>\n                    <li\n                        class=\"select2-no-result select2-results__option\"\n                        *ngIf=\"!filteredData?.length && noResultMessage\"\n                        [innerHTML]=\"noResultMessage\"\n                    ></li>\n                    <li\n                        class=\"select2-too-much-result select2-results__option\"\n                        *ngIf=\"maxResultsExceeded\"\n                        [innerHTML]=\"maxResultsMessage\"\n                    ></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</ng-template>\n",
                styles: [".select2-label{color:#000;color:var(--select2-label-text-color,#000)}.select2-container{box-sizing:border-box;display:inline-block;margin:0;position:relative;vertical-align:middle;width:100%}.select2-container .select2-container-dropdown{opacity:0;position:absolute;width:0}.select2-container .select2-selection--single{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;box-sizing:border-box;cursor:pointer;display:block;height:28px;user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{display:block;flex:1 1 auto;overflow:hidden;padding:0 0 0 8px;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-selection--single .select2-selection__clear{position:relative}.select2-container .select2-selection--multiple{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;box-sizing:border-box;cursor:pointer;display:block;min-height:32px;user-select:none}.select2-container .select2-selection--multiple .select2-selection__rendered{display:inline-block;overflow:hidden;padding-left:8px;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-search--inline{float:left}.select2-container .select2-search--inline .select2-search__field{border:none;box-sizing:border-box;font-size:100%;margin-top:5px;padding:0}.select2-container .select2-search--inline .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-dropdown{background:#fff;background:var(--select2-dropdown-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-dropdown-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);box-sizing:border-box;display:block;height:0;overflow:hidden;position:absolute;width:100%;z-index:1051}.select2-dropdown .select2-label-content{display:contents}.select2-results{display:block}.select2-results__options{list-style:none;margin:0;padding:0}.select2-results__option{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;color:#000;color:var(--select2-option-text-color,#000);padding:6px;user-select:none}.select2-results__option[aria-selected]{cursor:pointer}.select2-container.select2-container-dropdown.select2-container--open{opacity:1;width:100%}.select2-container--open .select2-dropdown{height:auto;overflow:auto}.select2-container--open .select2-dropdown--above{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0;bottom:27px;display:flex;flex-direction:column-reverse}.select2-container--open .select2-dropdown--below{border-top:none;border-top-left-radius:0;border-top-right-radius:0}.select2-search--dropdown{display:block;padding:4px}.select2-search--dropdown .select2-search__field{box-sizing:border-box;padding:4px;width:100%}.select2-search--dropdown .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-search--dropdown.select2-search--hide{display:none}.select2-close-mask{background:#fff;border:0;display:block;filter:alpha(opacity=0);height:auto;left:0;margin:0;min-height:100%;min-width:100%;opacity:0;padding:0;position:fixed;top:0;width:auto;z-index:99}.select2-required:before{color:red;color:var(--select2-required-color,red);content:\"*\"}.select2-hidden-accessible{border:0!important;clip:rect(0 0 0 0)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important}.select2-container--default .select2-selection--single{background:#fff;background:var(--select2-selection-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-selection-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);display:flex}.select2-container--default .select2-selection--single .select2-selection__rendered{color:#444;color:var(--select2-selection-text-color,#444);line-height:28px}.select2-container--default .select2-selection--single .select2-selection__clear{cursor:pointer;float:right;font-weight:700}.select2-container--default .select2-selection--single .select2-selection__placeholder{color:#999;color:var(--select2-placeholder-color,#999)}.select2-container--default .select2-selection--single .select2-selection__placeholder span{overflow:hidden;text-overflow:ellipsis;text-overflow:var(--select2-placeholder-overflow,ellipsis);white-space:nowrap}.select2-container--default .select2-selection--single .select2-selection__placeholder__option{display:none}.select2-container--default .select2-selection--single .select2-selection__arrow,.select2-container--default .select2-selection--single .select2-selection__reset{align-items:center;display:flex;justify-content:center;width:20px}.select2-container--default .select2-selection--single .select2-selection__arrow:before{border-bottom:0 solid var(--select2-arrow-color,#888);border-color:#888 transparent;border-left:4px solid transparent;border-right:4px solid transparent;border-top:5px solid var(--select2-arrow-color,#888);content:\" \";height:0;width:0}.select2-container--default .select2-selection--single .select2-selection__reset{color:#999;color:var(--select2-reset-color,#999)}.select2-container--default.select2-container--disabled .select2-selection--single{background:#eee;background:var(--select2-selection-disabled-background,#eee);cursor:default}.select2-container--default.select2-container--disabled .select2-selection--single .select2-selection__clear{display:none}.select2-container--default.select2-container--open .select2-selection--single .select2-selection__arrow:before{border-bottom-color:var(--select2-arrow-color,#888);border-color:transparent transparent #888;border-right-color:transparent;border-top-color:transparent;border-width:0 4px 5px}.select2-container--default .select2-selection--multiple{background:#fff;background:var(--select2-selection-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-selection-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);cursor:text}.select2-container--default .select2-selection--multiple .select2-selection__rendered{box-sizing:border-box;flex:1 1 auto;list-style:none;margin:0;padding:0 5px;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__rendered li{list-style:none}.select2-container--default .select2-selection--multiple .select2-selection__placeholder{color:#999;color:var(--select2-placeholder-color,#999);display:block;float:left;margin-top:5px;overflow:hidden;text-overflow:ellipsis;text-overflow:var(--select2-placeholder-overflow,ellipsis);white-space:nowrap;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__placeholder__option{display:none}.select2-container--default .select2-selection--multiple .select2-selection__clear{cursor:pointer;float:right;font-weight:700;margin-right:10px;margin-top:5px}.select2-container--default .select2-selection--multiple .select2-selection__choice{background:#e4e4e4;background:var(--select2-selection-choice-background,#e4e4e4);border:1px solid #aaa;border:1px solid var(--select2-selection-choice-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);color:#000;color:var(--select2-selection-choice-text-color,#000);cursor:default;float:left;margin-right:5px;margin-top:5px;padding:0 5px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:#999;color:var(--select2-selection-choice-close-color,#999);cursor:pointer;display:inline-block;font-weight:700;margin-right:2px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#333;color:var(--select2-selection-choice-hover-close-color,#333)}.select2-container--default.select2-container--focused .select2-selection--multiple,.select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--multiple,.select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--single{border:1px solid #000;border:1px solid var(--select2-selection-focus-border-color,#000);outline:none}.select2-container--default.select2-container--disabled .select2-selection--multiple{background:#eee;background:var(--select2-selection-disabled-background,#eee);cursor:default}.select2-container--default.select2-container--disabled .select2-selection__choice__remove{display:none}.select2-container--default.select2-container--open.select2-container--above .select2-selection--multiple,.select2-container--default.select2-container--open.select2-container--above .select2-selection--single{border-top-left-radius:0;border-top-right-radius:0}.select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple,.select2-container--default.select2-container--open.select2-container--below .select2-selection--single{border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--default .select2-search--dropdown .select2-search__field{background:#fff;background:1px solid var(--select2-search-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-search-border-color,#aaa);border-radius:0;border-radius:var(--select2-search-border-radius,0)}.select2-container--default .select2-search--inline .select2-search__field{-webkit-appearance:textfield;background:transparent;border:none;box-shadow:none;outline:none}.select2-container--default .select2-results>.select2-results__options{overflow-y:auto}.select2-container--default .select2-results__option[role=group]{padding:0}.select2-container--default .select2-results__option[aria-disabled=true]{background:transparent;background:var(--select2-option-disabled-background,transparent);color:#999;color:var(--select2-option-disabled-text-color,#999)}.select2-container--default .select2-results__option[aria-selected=true]{background:#ddd;background:var(--select2-option-selected-background,#ddd);color:#000;color:var(--select2-option-selected-text-color,#000)}.select2-container--default .select2-results__option .select2-results__option{padding-left:1em}.select2-container--default .select2-results__option .select2-results__option .select2-results__group{padding-left:0}.select2-container--default .select2-results__option .select2-results__option .select2-results__option{margin-left:-1em;padding-left:2em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-2em;padding-left:3em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-3em;padding-left:4em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-4em;padding-left:5em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-5em;padding-left:6em}.select2-container--default .select2-results__option--highlighted[aria-selected]{background:#5897fb;background:var(--select2-option-highlighted-background,#5897fb);color:#fff;color:var(--select2-option-highlighted-text-color,#fff)}.select2-container--default .select2-results__option--hide{display:none}.select2-container--default .select2-results__group{background:transparent;background:var(--select2-option-group-background,transparent);color:grey;color:var(--select2-option-group-text-color,grey);cursor:default;display:block;padding:6px}.select2-no-result{color:#888;color:var(--select2-no-result-color,#888);font-style:italic;font-style:var(--select2-no-result-font-style,italic)}.select2-too-much-result{color:#888;color:var(--select2-too-much-result-color,#888);font-style:italic;font-style:var(--select2-too-much-font-style,italic)}:host.nostyle .select2-dropdown{border-color:transparent}:host.nostyle .select2-container--default .select2-focused .select2-selection--multiple,:host.nostyle .select2-container--default .select2-focused .select2-selection--single,:host.nostyle .select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--multiple,:host.nostyle .select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--single,:host.nostyle .select2-selection--multiple,:host.nostyle .select2-selection--single{background:transparent;border-color:transparent}:host.material{display:inline-block;width:300px}:host.material>.select2-container{padding-bottom:1.29688em;vertical-align:inherit}:host.material>.select2-container .selection{align-items:baseline;border-top:.84375em solid transparent;display:inline-flex;height:auto;padding:.4375em 0;width:100%}:host.material .select2-container--default .select2-selection--multiple,:host.material .select2-container--default .select2-selection--single{border:0;border-radius:0;box-sizing:border-box;height:24px;width:100%}:host.material .select2-container--default .select2-selection--multiple:before,:host.material .select2-container--default .select2-selection--single:before{background:#ddd;background:var(--select2-material-underline,#ddd);bottom:1.65em;content:\" \";display:block;height:1px;position:absolute;width:100%}:host.material .select2-container--default .select2-selection--multiple:after,:host.material .select2-container--default .select2-selection--single:after{background:#5a419e;background:var(--select2-material-underline-active,#5a419e);bottom:1.63em;content:\" \";display:block;height:2px;left:50%;position:absolute;transition:none;width:0}:host.material .select2-container--default .select2-selection--multiple .select2-selection__rendered,:host.material .select2-container--default .select2-selection--single .select2-selection__rendered{line-height:inherit;padding-left:1px}:host.material .select2-container--default .select2-selection--multiple .select2-selection__placeholder,:host.material .select2-container--default .select2-selection--single .select2-selection__placeholder{color:rgba(0,0,0,.38);color:var(--select2-material-placeholder-color,rgba(0,0,0,.38));display:block;left:0;position:absolute;top:20px;transform-origin:0 21px;transition:transform .3s}:host.material .select2-container--default .select2-container--open{bottom:1.6em;left:0}:host.material .select2-container--default .select2-selection__placeholder__option{transform:translateY(-1.5em) scale(.75) perspective(100px) translateZ(.001px);width:133.33333%}:host.material .select2-container--default .select2-selection__arrow{top:20px}:host.material .select2-container--default.select2-container--open .select2-selection--multiple:after,:host.material .select2-container--default.select2-container--open .select2-selection--single:after,:host.material .select2-container--default .select2-focused .select2-selection--multiple:after,:host.material .select2-container--default .select2-focused .select2-selection--single:after{left:0;transition:width .3s cubic-bezier(.12,1,.77,1),left .3s cubic-bezier(.12,1,.77,1);width:100%}:host.material .select2-container--default .select2-dropdown{border:0;border-radius:0;box-shadow:0 5px 5px rgba(0,0,0,.5)}:host.material .select2-container--default .select2-results__option--highlighted[aria-selected],:host.material .select2-container--default .select2-results__option[aria-selected=true]{background:rgba(0,0,0,.04);background:var(--select2-material-option-selected-background,rgba(0,0,0,.04));color:#000;color:var(--select2-material-option-highlighted-text-color,#000)}:host.material .select2-container--default .select2-results__option[aria-selected=true]{color:#ff5722;color:var(--select2-material-option-selected-text-color,#ff5722)}:host.material .select2-container--default.select2-container--disabled .select2-selection--multiple,:host.material .select2-container--default.select2-container--disabled .select2-selection--single{background:transparent}:host.material .select2-container--default.select2-container--disabled .select2-selection--multiple:before,:host.material .select2-container--default.select2-container--disabled .select2-selection--single:before{background:linear-gradient(90deg,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background:var(--select2-material-underline-disabled,linear-gradient(90deg,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0));background-position:0 bottom;background-repeat:repeat-x;background-size:4px 1px}:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--multiple:after,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--multiple:before,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--single:after,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--single:before{background:red;background:var(--select2-material-underline-invalid,red)}:host.material:not(.select2-container--open) .select2-focused .select2-selection--multiple,:host.material:not(.select2-container--open) .select2-focused .select2-selection--single{border:0}:host.material .select2-subscript-wrapper{color:#888;color:var(--select2-hint-text-color,#888);font-size:75%;position:absolute;top:calc(100% - 1.72917em)}::ng-deep .select2-overlay-backdrop{background:rgba(0,0,0,.32);background:var(--select2-overlay-backdrop,transparent)}::ng-deep .cdk-overlay-container .select2-container .select2-dropdown.select2-dropdown--above{bottom:28px}::ng-deep .cdk-overlay-container .select2-container--open.select2-position-auto .select2-dropdown{margin-bottom:28px}::ng-deep .cdk-overlay-container .select2-container--open.select2-position-auto .select2-dropdown.select2-dropdown--above{bottom:0;margin-bottom:0;margin-top:28px}@supports (-moz-appearance:none){select2.material .select2-container--default .select2-selection--multiple,select2.material .select2-container--default .select2-selection--single{height:26px}}@supports (-ms-scroll-limit:0){select2.material .select2-container--default .select2-selection--multiple,select2.material .select2-container--default .select2-selection--single{height:25px}}"]
            }] }
];
/** @nocollapse */
Select2.ctorParameters = () => [
    { type: ViewportRuler },
    { type: ChangeDetectorRef },
    { type: NgForm, decorators: [{ type: Optional }] },
    { type: FormGroupDirective, decorators: [{ type: Optional }] },
    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },
    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }
];
Select2.propDecorators = {
    data: [{ type: Input }],
    minCharForSearch: [{ type: Input }],
    displaySearchStatus: [{ type: Input }],
    placeholder: [{ type: Input }],
    customSearchEnabled: [{ type: Input }],
    limitSelection: [{ type: Input }],
    listPosition: [{ type: Input }],
    multiple: [{ type: Input }],
    overlay: [{ type: Input }],
    styleMode: [{ type: Input }],
    noResultMessage: [{ type: Input }],
    maxResults: [{ type: Input }],
    maxResultsMessage: [{ type: Input }],
    infiniteScrollDistance: [{ type: Input }],
    infiniteScrollThrottle: [{ type: Input }],
    infiniteScroll: [{ type: Input }],
    editPattern: [{ type: Input }],
    templates: [{ type: Input }],
    resultMaxHeight: [{ type: Input }],
    update: [{ type: Output }],
    open: [{ type: Output }],
    close: [{ type: Output }],
    focus: [{ type: Output }],
    blur: [{ type: Output }],
    search: [{ type: Output }],
    scroll: [{ type: Output }],
    removeOption: [{ type: Output }],
    minCountForSearch: [{ type: Input }],
    id: [{ type: Input }, { type: HostBinding, args: ['id',] }],
    required: [{ type: Input }],
    disabled: [{ type: Input }],
    hideSelectedItems: [{ type: Input }],
    readonly: [{ type: Input }],
    value: [{ type: Input }],
    tabIndex: [{ type: Input }],
    resettable: [{ type: Input }],
    ariaInvalid: [{ type: HostBinding, args: ['attr.aria-invalid',] }],
    classMaterial: [{ type: HostBinding, args: ['class.material',] }],
    classNostyle: [{ type: HostBinding, args: ['class.nostyle',] }],
    select2above: [{ type: HostBinding, args: ['class.select2-above',] }],
    cdkConnectedOverlay: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],
    selection: [{ type: ViewChild, args: ['selection', { static: true },] }],
    resultContainer: [{ type: ViewChild, args: ['results',] }],
    results: [{ type: ViewChildren, args: ['result',] }],
    searchInput: [{ type: ViewChild, args: ['searchInput',] }],
    dropdown: [{ type: ViewChild, args: ['dropdown',] }]
};
if (false) {
    /** @type {?} */
    Select2.prototype._data;
    /** @type {?} */
    Select2.prototype.minCharForSearch;
    /** @type {?} */
    Select2.prototype.displaySearchStatus;
    /** @type {?} */
    Select2.prototype.placeholder;
    /** @type {?} */
    Select2.prototype.customSearchEnabled;
    /** @type {?} */
    Select2.prototype.limitSelection;
    /** @type {?} */
    Select2.prototype.listPosition;
    /**
     * use the material style
     * @type {?}
     */
    Select2.prototype.styleMode;
    /**
     * message when no result
     * @type {?}
     */
    Select2.prototype.noResultMessage;
    /**
     * maximum results limit (0 = no limit)
     * @type {?}
     */
    Select2.prototype.maxResults;
    /**
     * message when maximum results
     * @type {?}
     */
    Select2.prototype.maxResultsMessage;
    /**
     * infinite scroll distance
     * @type {?}
     */
    Select2.prototype.infiniteScrollDistance;
    /**
     * infinite scroll distance
     * @type {?}
     */
    Select2.prototype.infiniteScrollThrottle;
    /**
     * use it for change the pattern of the filter search
     * @type {?}
     */
    Select2.prototype.editPattern;
    /**
     * template for formating
     * @type {?}
     */
    Select2.prototype.templates;
    /**
     * the max height of the results container when opening the select
     * @type {?}
     */
    Select2.prototype.resultMaxHeight;
    /** @type {?} */
    Select2.prototype.update;
    /** @type {?} */
    Select2.prototype.open;
    /** @type {?} */
    Select2.prototype.close;
    /** @type {?} */
    Select2.prototype.focus;
    /** @type {?} */
    Select2.prototype.blur;
    /** @type {?} */
    Select2.prototype.search;
    /** @type {?} */
    Select2.prototype.scroll;
    /** @type {?} */
    Select2.prototype.removeOption;
    /** @type {?} */
    Select2.prototype.option;
    /** @type {?} */
    Select2.prototype.isOpen;
    /** @type {?} */
    Select2.prototype.searchStyle;
    /**
     * Whether the element is focused or not.
     * @type {?}
     */
    Select2.prototype.focused;
    /** @type {?} */
    Select2.prototype.filteredData;
    /** @type {?} */
    Select2.prototype.overlayWidth;
    /** @type {?} */
    Select2.prototype.overlayHeight;
    /** @type {?} */
    Select2.prototype._triggerRect;
    /** @type {?} */
    Select2.prototype._dropdownRect;
    /** @type {?} */
    Select2.prototype.maxResultsExceeded;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._minCountForSearch;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.cdkConnectedOverlay;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.selection;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.resultContainer;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.results;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.searchInput;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.dropdown;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.hoveringValue;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.innerSearchText;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.isSearchboxHidden;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.selectionElement;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._stateChanges;
    /**
     * Tab index for the element.
     * @type {?}
     * @private
     */
    Select2.prototype._tabIndex;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._required;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._readonly;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._multiple;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._overlay;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._resettable;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._hideSelectedItems;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._clickDetection;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._clickDetectionFc;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._id;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._uid;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._value;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._previousNativeValue;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._infiniteScroll;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._overlayPosition;
    /**
     * View -> model callback called when select has been touched
     * @type {?}
     * @private
     */
    Select2.prototype._onTouched;
    /**
     * View -> model callback called when value changes
     * @type {?}
     * @private
     */
    Select2.prototype._onChange;
    /**
     * @type {?}
     * @protected
     */
    Select2.prototype._viewportRuler;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._parentForm;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._parentFormGroup;
    /** @type {?} */
    Select2.prototype._control;
}
//# sourceMappingURL=data:application/json;base64,