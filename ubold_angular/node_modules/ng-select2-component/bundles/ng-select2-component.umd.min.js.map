{"version":3,"sources":["../../../projects/ng-select2-component/src/lib/select2-const.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng-select2-component/src/lib/select2-utils.ts","../../../projects/ng-select2-component/src/lib/select2.component.ts","../../../projects/ng-select2-component/src/lib/select2-hint.component.ts","../../../projects/ng-select2-component/src/lib/select2-label.component.ts","../../../projects/ng-select2-component/src/lib/select2.module.ts"],"names":["unicodePatterns","l","s","protectRegexp","RegExp","Object","create","__values","o","Symbol","iterator","m","i","call","length","next","value","done","TypeError","Select2Utils","getOptionByValue","data","Array","isArray","data_1","data_1_1","groupOrOption","options","options_1","e_2","options_1_1","option","getOptionsByValue","multiple","values","result","values_1","values_1_1","v","push","getFirstAvailableOption","data_2","data_2_1","options_2","e_5","options_2_1","disabled","valueIsNotInFilteredData","filteredData","isNullOrUndefined","filteredData_1","filteredData_1_1","options_3","e_7","options_3_1","getPreviousOption","hoveringValue","findIt","j","hide","getNextOption","filteredData_2","filteredData_2_1","options_4","e_9","options_4_1","getReduceData","maxResults","counter","data_3","data_3_1","group","assign","options_5","e_11","options_5_1","item","reduce","getFilteredData","searchText","editPattern","data_4","data_4_1","some","containSearchText","label","filteredOptions","filter","getFilteredSelectedData","selectedOptions","data_5","data_5_1","isSelected","isSearchboxHiddex","minCountForSearch","isNaN","getOptionsCount","op","removeSelection","splice","count","data_6","data_6_1","formatSansUnicode","match","formatPattern","protectPattern","str","replace","unicodePatterns_1","unicodePatterns_1_1","unicodePattern","nextUniqueId","displaySearchStatusList","Select2","_viewportRuler","_changeDetectorRef","_parentForm","_parentFormGroup","_control","tabIndex","this","minCharForSearch","limitSelection","listPosition","styleMode","maxResultsMessage","infiniteScrollDistance","infiniteScrollThrottle","resultMaxHeight","update","EventEmitter","open","close","focus","blur","search","scroll","removeOption","isOpen","focused","innerSearchText","_stateChanges","Subject","_disabled","_required","_readonly","_multiple","_overlay","_resettable","_hideSelectedItems","_clickDetection","_uid","_infiniteScroll","_onTouched","_onChange","id","_tabIndex","parseInt","valueAccessor","_clickDetectionFc","clickDetection","bind","defineProperty","prototype","_data","updateFilteredData","_coerceBooleanProperty","ngOnInit","text","customSearchEnabled","emit","component","_value","_minCountForSearch","updateSearchBox","_id","_this","testValueChange","setTimeout","writeValue","_isErrorState","overlay","_isAbobeOverlay","_a","resultContainer","nativeElement","change","subscribe","triggerRect","ngAfterViewInit","cdkConnectedOverlay","positionChange","posChange","connectionPair","originY","_overlayPosition","detectChanges","selectionElement","selection","ngDoCheck","_dirtyCheckNativeValue","_triggerRect","overlayWidth","width","_dropdownRect","height","overlayHeight","ngOnDestroy","window","document","body","removeEventListener","hidden","isSearchboxHidden","hideSearch","displaySearchStatus","indexOf","getOptionStyle","classes","mouseenter","click","testSelection","select","reset","e","preventDefault","stopPropagation","prevChange","event","toggleOpenAndClose","_focus","_focusSearchboxOrResultsElement","updateScrollFromOption","resultsElement","scrollTop","_b","overlayRef","updatePosition","addEventListener","markForCheck","hasTemplate","defaut","templates","TemplateRef","templateId","getTemplate","undefined","getBoundingClientRect","dropdown","value1","value2","_d","_e","e1","hideSelectedItems","maxResultsExceeded","ifParentContainsClass","ifParentContainsId","clickExit","element","cssClass","getParentElementByClass","getParentElementById","containClasses","trim","split","parentElement","cssClasses","classList","cssClasses_1","cssClasses_1_1","contains","focusin","focusout","index","findIndex","map","keyDown","_testKey","moveDown","moveUp","selectByEnter","openKey","trackBy","_index","searchUpdate","isDisabled","removedOption","_setSelectionByValue","registerOnChange","fn","registerOnTouched","setDisabledState","onScroll","way","isInvalid","invalid","isTouched","touched","isSubmitted","submitted","domElement","results","find","r","innerText","listClientRect","optionClientRect","top","refs","_isKey","_getKey","code","key","Error","viewToModelUpdate","newValue","_previousNativeValue","searchInput","state","Component","args","selector","template","ViewportRuler","ChangeDetectorRef","NgForm","decorators","type","Optional","FormGroupDirective","NgControl","Self","Attribute","Input","Output","HostBinding","ViewChild","CdkConnectedOverlay","static","ViewChildren","Directive","NgModule","imports","CommonModule","FormsModule","OverlayModule","ReactiveFormsModule","InfiniteScrollModule","declarations","Select2Hint","Select2Label","exports"],"mappings":"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","sourcesContent":["export const timeout = 200;\n\nexport const unicodePatterns: { l: string; s: RegExp }[] = [\n    { l: 'a', s: /[ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/gi },\n    { l: 'aa', s: /ꜳ/gi },\n    { l: 'ae', s: /[æǽǣ]/gi },\n    { l: 'ao', s: /ꜵ/gi },\n    { l: 'au', s: /ꜷ/gi },\n    { l: 'av', s: /[ꜹꜻ]/gi },\n    { l: 'ay', s: /ꜽ/gi },\n    { l: 'b', s: /[ⓑｂḃḅḇƀƃɓ]/gi },\n    { l: 'c', s: /[ⓒｃćĉċčçḉƈȼꜿↄ]/gi },\n    { l: 'd', s: /[ⓓｄḋďḍḑḓḏđƌɖɗꝺ]/gi },\n    { l: 'dz', s: /[ǳǆ]/gi },\n    { l: 'e', s: /[ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/gi },\n    { l: 'f', s: /[ⓕｆḟƒꝼ]/gi },\n    { l: 'g', s: /[ⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/gi },\n    { l: 'h', s: /[ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/gi },\n    { l: 'hv', s: /ƕ/gi },\n    { l: 'i', s: /[ⓘｉìíîĩīĭİïḯỉǐȉȋịįḭɨı]/gi },\n    { l: 'j', s: /[ⓙｊĵǰɉ]/gi },\n    { l: 'k', s: /[ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/gi },\n    { l: 'l', s: /[ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇꝆ]/gi },\n    { l: 'lj', s: /ǉ/gi },\n    { l: 'm', s: /[ⓜｍḿṁṃɱɯ]/gi },\n    { l: 'n', s: /[ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/gi },\n    { l: 'nj', s: /ǌ/gi },\n    { l: 'o', s: /[ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔƟꝋꝍɵ]/gi },\n    { l: 'oi', s: /ƣ/gi },\n    { l: 'oe', s: /œ/gi },\n    { l: 'oo', s: /ꝏ/gi },\n    { l: 'ou', s: /ȣ/gi },\n    { l: 'p', s: /[ⓟｐṕṗƥᵽꝑꝓꝕ]/gi },\n    { l: 'q', s: /[ⓠｑɋꝗꝙ]/gi },\n    { l: 'r', s: /[ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/gi },\n    { l: 's', s: /[ⓢｓßẞśṥŝṡšṧṣṩșşȿꞩꞅẛ]/gi },\n    { l: 't', s: /[ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/gi },\n    { l: 'tz', s: /ꜩ/gi },\n    { l: 'u', s: /[ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/gi },\n    { l: 'v', s: /[ⓥｖṽṿʋꝟʌ]/gi },\n    { l: 'vy', s: /ꝡ/gi },\n    { l: 'w', s: /[ⓦｗẁẃŵẇẅẘẉⱳ]/gi },\n    { l: 'x', s: /[ⓧｘẋẍ]/gi },\n    { l: 'y', s: /[ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/gi },\n    { l: 'z', s: /[ⓩｚźẑżžẓẕƶȥɀⱬꝣ]/gi },\n];\n\nexport const defaultMinCountForSearch = 6;\n\nexport const protectRegexp = new RegExp('[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\\\^\\\\$\\\\|]', 'g');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { defaultMinCountForSearch, protectRegexp, unicodePatterns } from './select2-const';\nimport { Select2Data, Select2Group, Select2Option, Select2UpdateValue, Select2Value } from './select2-interfaces';\n\nexport class Select2Utils {\n    static getOptionByValue(data: Select2Data, value: Select2Value | null | undefined) {\n        if (Array.isArray(data)) {\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    for (const option of options) {\n                        if (option.value === value) {\n                            return option;\n                        }\n                    }\n                } else if ((groupOrOption as Select2Option).value === value) {\n                    return groupOrOption as Select2Option;\n                }\n            }\n        }\n        return null;\n    }\n\n    static getOptionsByValue(\n        data: Select2Data,\n        value: Select2UpdateValue | null | undefined,\n        multiple: boolean | null | undefined,\n    ) {\n        if (multiple) {\n            const values: Select2Value[] = Array.isArray(value) ? value : [];\n            const result: Select2Option[] = [];\n            for (const v of values) {\n                const option = Select2Utils.getOptionByValue(data, v);\n                if (option) {\n                    result.push(option);\n                }\n            }\n            return result;\n        }\n        return Select2Utils.getOptionByValue(data, value as Select2Value | null | undefined);\n    }\n\n    static getFirstAvailableOption(data: Select2Data) {\n        if (Array.isArray(data)) {\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    for (const option of options) {\n                        if (!option.disabled) {\n                            return option.value;\n                        }\n                    }\n                } else {\n                    const option = groupOrOption as Select2Option;\n                    if (!option.disabled) {\n                        return option.value;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    static valueIsNotInFilteredData(filteredData: Select2Data, value: Select2Value | null | undefined) {\n        if (Select2Utils.isNullOrUndefined(value)) {\n            return true;\n        }\n        for (const groupOrOption of filteredData) {\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                for (const option of options) {\n                    if (option.value === value) {\n                        return false;\n                    }\n                }\n            } else if ((groupOrOption as Select2Option).value === value) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // tslint:disable-next-line:cognitive-complexity\n    static getPreviousOption(filteredData: Select2Data, hoveringValue: Select2Value | null | undefined) {\n        let findIt = Select2Utils.isNullOrUndefined(hoveringValue);\n        for (let i = filteredData.length - 1; i >= 0; i--) {\n            const groupOrOption = filteredData[i];\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                for (let j = options.length - 1; j >= 0; j--) {\n                    const option = options[j];\n                    if (findIt && !option.disabled && !option.hide) {\n                        return option;\n                    }\n                    if (!findIt) {\n                        findIt = option.value === hoveringValue;\n                    }\n                }\n            } else {\n                const option = groupOrOption as Select2Option;\n                if (findIt && !option.disabled && !option.hide) {\n                    return option;\n                }\n                if (!findIt) {\n                    findIt = option.value === hoveringValue;\n                }\n            }\n        }\n        return null;\n    }\n    // tslint:disable-next-line:cognitive-complexity\n    static getNextOption(filteredData: Select2Data, hoveringValue: Select2Value | null | undefined) {\n        let findIt = Select2Utils.isNullOrUndefined(hoveringValue);\n        for (const groupOrOption of filteredData) {\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                for (const option of options) {\n                    if (findIt) {\n                        if (!option.disabled && !option.hide) {\n                            return option;\n                        }\n                    } else if (!findIt) {\n                        findIt = option.value === hoveringValue;\n                    }\n                }\n            } else {\n                const option = groupOrOption as Select2Option;\n                if (findIt) {\n                    if (!option.disabled && !option.hide) {\n                        return option;\n                    }\n                } else if (!findIt) {\n                    findIt = option.value === hoveringValue;\n                }\n            }\n        }\n        return null;\n    }\n\n    static getReduceData(data: Select2Data, maxResults: number = 0): { result: Select2Data; reduce: boolean } {\n        if (maxResults > 0) {\n            let counter = 0;\n            const result: Select2Data = [];\n            // debugger;\n\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    const group = {\n                        ...groupOrOption,\n                        options: [],\n                    };\n                    result.push(group);\n                    for (const item of options) {\n                        group.options.push(item);\n                        counter++;\n                        if (counter === maxResults) {\n                            return { result, reduce: true };\n                        }\n                    }\n                } else {\n                    result.push(groupOrOption);\n                    counter++;\n                }\n                if (counter === maxResults) {\n                    return { result, reduce: true };\n                }\n            }\n            return { result, reduce: false };\n        } else {\n            return { result: data, reduce: false };\n        }\n    }\n\n    static getFilteredData(\n        data: Select2Data,\n        searchText: string | null,\n        editPattern?: (str: string) => string,\n    ): Select2Data {\n        if (searchText) {\n            const result: Select2Data = [];\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    if (options.some(group => Select2Utils.containSearchText(group.label, searchText, editPattern))) {\n                        const filteredOptions = options.filter(group =>\n                            Select2Utils.containSearchText(group.label, searchText, editPattern),\n                        );\n                        result.push({\n                            ...groupOrOption,\n                            options: filteredOptions,\n                        });\n                    }\n                } else if (Select2Utils.containSearchText(groupOrOption.label, searchText, editPattern)) {\n                    result.push(groupOrOption);\n                }\n            }\n            return result;\n        } else {\n            return data;\n        }\n    }\n\n    static getFilteredSelectedData(\n        data: Select2Data,\n        selectedOptions: Select2Option | Select2Option[] | null,\n    ): Select2Data {\n        const result: Select2Data = [];\n        for (const groupOrOption of data) {\n            const options = (groupOrOption as Select2Group).options;\n            if (options) {\n                const filteredOptions = options.filter(\n                    group => Select2Utils.isSelected(selectedOptions, group, true) === 'false',\n                );\n                if (filteredOptions.length) {\n                    result.push({\n                        ...groupOrOption,\n                        options: filteredOptions,\n                    });\n                }\n            } else if (Select2Utils.isSelected(selectedOptions, groupOrOption as Select2Option, true) === 'false') {\n                result.push(groupOrOption);\n            }\n        }\n        return result;\n    }\n\n    static isSearchboxHiddex(data: Select2Data, minCountForSearch?: number | string): boolean {\n        if (\n            minCountForSearch === '' ||\n            minCountForSearch === undefined ||\n            minCountForSearch === null ||\n            isNaN(+minCountForSearch)\n        ) {\n            minCountForSearch = defaultMinCountForSearch;\n        }\n        const optionCount = Select2Utils.getOptionsCount(data);\n        return optionCount < +minCountForSearch;\n    }\n\n    static isSelected(\n        options: Select2Option | Select2Option[] | null,\n        option: Select2Option,\n        multiple: boolean | null | undefined,\n    ) {\n        return multiple\n            ? options && (options as Select2Option[]).some(op => op.value === option.value)\n                ? 'true'\n                : 'false'\n            : options && option.value === (options as Select2Option).value\n            ? 'true'\n            : 'false';\n    }\n\n    static removeSelection(options: Select2Option | Select2Option[] | null, option: Select2Option) {\n        for (let i = 0; i < (options as Select2Option[]).length; i++) {\n            if ((options as Select2Option[])[i].value === option.value) {\n                (options as Select2Option[]).splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    private static getOptionsCount(data: Select2Data) {\n        let count = 0;\n        if (Array.isArray(data)) {\n            for (const groupOrOption of data) {\n                const options = (groupOrOption as Select2Group).options;\n                if (options) {\n                    count += options.length;\n                } else {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    private static isNullOrUndefined(value: any) {\n        return value === null || value === undefined;\n    }\n\n    private static containSearchText(\n        label: string,\n        searchText: string | null,\n        editPattern: ((str: string) => string) | undefined,\n    ): boolean {\n        return searchText\n            ? Select2Utils.formatSansUnicode(label).match(\n                  new RegExp(Select2Utils.formatPattern(searchText, editPattern), 'i'),\n              ) !== null\n            : true;\n    }\n\n    private static protectPattern(str: string): string {\n        return str.replace(protectRegexp, '\\\\$&');\n    }\n\n    private static formatSansUnicode(str: string): string {\n        for (const unicodePattern of unicodePatterns) {\n            str = str.replace(unicodePattern.s, unicodePattern.l);\n        }\n        return str;\n    }\n\n    private static formatPattern(str: string, editPattern: ((str: string) => string) | undefined): string {\n        str = Select2Utils.formatSansUnicode(Select2Utils.protectPattern(str));\n\n        if (editPattern && typeof editPattern === 'function') {\n            str = editPattern(str);\n        }\n        return str;\n    }\n}\n","import {\n    CdkConnectedOverlay,\n    ConnectedOverlayPositionChange,\n    ConnectedPosition,\n    VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport type { ElementRef, QueryList } from '@angular/core';\nimport {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectorRef,\n    Component,\n    DoCheck,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    Self,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\n\nimport { timeout } from './select2-const';\nimport {\n    Select2Data,\n    Select2Group,\n    Select2Option,\n    Select2RemoveEvent,\n    Select2ScrollEvent,\n    Select2SearchEvent,\n    Select2UpdateEvent,\n    Select2UpdateValue,\n    Select2Value,\n} from './select2-interfaces';\nimport { Select2Utils } from './select2-utils';\n\nlet nextUniqueId = 0;\n\nconst displaySearchStatusList = ['default', 'hidden', 'always'];\n\n@Component({\n    selector: 'select2',\n    templateUrl: './select2.component.html',\n    styleUrls: ['./select2.component.scss'],\n})\nexport class Select2 implements ControlValueAccessor, OnInit, OnDestroy, DoCheck, AfterViewInit {\n    _data: Select2Data;\n\n    /** data of options & optiongrps */\n    @Input() set data(data: Select2Data) {\n        this._data = data;\n        this.updateFilteredData();\n    }\n    @Input() minCharForSearch = 0;\n    @Input() displaySearchStatus: 'default' | 'hidden' | 'always';\n    @Input() placeholder: string;\n    @Input() customSearchEnabled: boolean;\n    @Input() limitSelection = 0;\n    @Input() listPosition: 'above' | 'below' | 'auto' = 'below';\n\n    @Input()\n    get multiple(): any {\n        return this._multiple;\n    }\n    set multiple(value: any) {\n        this._multiple = this._coerceBooleanProperty(value);\n        this.ngOnInit();\n    }\n\n    /** use the material style */\n    @Input()\n    get overlay(): any {\n        return this._overlay;\n    }\n    set overlay(value: any) {\n        this._overlay = this._coerceBooleanProperty(value);\n    }\n\n    /** use the material style */\n    @Input() styleMode: 'material' | 'noStyle' | 'default' = 'default';\n\n    /** message when no result */\n    @Input() noResultMessage: string;\n\n    /** maximum results limit (0 = no limit) */\n    @Input() maxResults = 0;\n\n    /** message when maximum results */\n    @Input() maxResultsMessage = 'Too many results…';\n\n    /** infinite scroll distance */\n    @Input() infiniteScrollDistance = 1.5;\n\n    /** infinite scroll distance */\n    @Input() infiniteScrollThrottle = 150;\n\n    /** infinite scroll activated */\n    @Input()\n    get infiniteScroll(): any {\n        return this._infiniteScroll;\n    }\n    set infiniteScroll(value: any) {\n        this._infiniteScroll = this._coerceBooleanProperty(value);\n    }\n\n    /** use it for change the pattern of the filter search */\n    @Input() editPattern: (str: string) => string;\n\n    /** template for formating */\n    @Input() templates: TemplateRef<any> | { [key: string]: TemplateRef<any> };\n\n    /** the max height of the results container when opening the select */\n    @Input() resultMaxHeight = '200px';\n\n    @Output() update = new EventEmitter<Select2UpdateEvent<Select2UpdateValue>>();\n    @Output() open = new EventEmitter<Select2>();\n    @Output() close = new EventEmitter<Select2>();\n    @Output() focus = new EventEmitter<Select2>();\n    @Output() blur = new EventEmitter<Select2>();\n    @Output() search = new EventEmitter<Select2SearchEvent<Select2UpdateValue>>();\n    @Output() scroll = new EventEmitter<Select2ScrollEvent>();\n    @Output() removeOption = new EventEmitter<Select2RemoveEvent<Select2UpdateValue>>();\n\n    option: Select2Option | Select2Option[] | null = null;\n    isOpen = false;\n    searchStyle: string;\n\n    /** Whether the element is focused or not. */\n    focused = false;\n\n    filteredData: Select2Data;\n\n    get select2Options() {\n        return this.multiple ? (this.option as Select2Option[]) : null;\n    }\n\n    get select2Option() {\n        return this.multiple ? null : (this.option as Select2Option);\n    }\n\n    get searchText() {\n        return this.innerSearchText;\n    }\n\n    set searchText(text: string) {\n        if (this.customSearchEnabled) {\n            this.search.emit({\n                component: this,\n                value: this._value,\n                search: text,\n            });\n        }\n        this.innerSearchText = text;\n    }\n\n    /** minimal data of show the search field */\n    @Input()\n    get minCountForSearch(): number | string {\n        return this._minCountForSearch;\n    }\n\n    set minCountForSearch(value: number | string) {\n        this._minCountForSearch = value;\n        this.updateSearchBox();\n    }\n\n    /** Unique id of the element. */\n    @Input()\n    @HostBinding('id')\n    get id() {\n        return this._id;\n    }\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /** Whether the element is required. */\n    @Input()\n    get required() {\n        return this._required;\n    }\n    set required(value: any) {\n        this._required = this._coerceBooleanProperty(value);\n    }\n\n    /** Whether selected items should be hidden. */\n    @Input()\n    get disabled() {\n        return this._control ? this._control.disabled : this._disabled;\n    }\n    set disabled(value: any) {\n        this._disabled = this._coerceBooleanProperty(value);\n    }\n\n    /** Whether items are hidden when has. */\n    @Input()\n    get hideSelectedItems() {\n        return this._hideSelectedItems;\n    }\n    set hideSelectedItems(value: any) {\n        this._hideSelectedItems = this._coerceBooleanProperty(value);\n    }\n\n    /** Whether the element is readonly. */\n    @Input()\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value: any) {\n        this._readonly = this._coerceBooleanProperty(value);\n    }\n\n    /** The input element's value. */\n    @Input()\n    get value() {\n        return this._value;\n    }\n    set value(value: Select2UpdateValue) {\n        if (this.testValueChange(this._value, value)) {\n            setTimeout(() => {\n                this._value = value;\n                this.writeValue(value);\n            }, 10);\n        }\n    }\n\n    /** Tab index for the select2 element. */\n    @Input()\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value: number) {\n        if (typeof value !== 'undefined') {\n            this._tabIndex = value;\n        }\n    }\n\n    /** reset with no selected value */\n    @Input()\n    get resettable() {\n        return this._resettable;\n    }\n    set resettable(value: any) {\n        this._resettable = this._coerceBooleanProperty(value);\n    }\n\n    @HostBinding('attr.aria-invalid')\n    get ariaInvalid(): boolean {\n        return this._isErrorState();\n    }\n\n    @HostBinding('class.material')\n    get classMaterial(): boolean {\n        return this.styleMode === 'material';\n    }\n\n    @HostBinding('class.nostyle')\n    get classNostyle(): boolean {\n        return this.styleMode === 'noStyle';\n    }\n\n    @HostBinding('class.select2-above')\n    get select2above(): boolean {\n        return !this.overlay ? this.listPosition === 'above' : this._isAbobeOverlay();\n    }\n\n    overlayWidth: number;\n    overlayHeight: number;\n    _triggerRect: DOMRect;\n    _dropdownRect: DOMRect;\n\n    get _positions(): ConnectedPosition[] {\n        if (this.listPosition === 'auto') {\n            [\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'bottom',\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'top',\n                },\n            ];\n        } else {\n            return null;\n        }\n    }\n\n    maxResultsExceeded: boolean;\n\n    private _minCountForSearch?: number | string;\n\n    @ViewChild(CdkConnectedOverlay)\n    private cdkConnectedOverlay: CdkConnectedOverlay;\n\n    @ViewChild('selection', { static: true })\n    private selection: ElementRef<HTMLElement>;\n    @ViewChild('results') private resultContainer: ElementRef<HTMLElement>;\n    @ViewChildren('result') private results: QueryList<ElementRef>;\n    @ViewChild('searchInput') private searchInput: ElementRef<HTMLElement>;\n    @ViewChild('dropdown') private dropdown: ElementRef<HTMLElement>;\n\n    private hoveringValue: Select2Value | null | undefined = null;\n    private innerSearchText = '';\n    private isSearchboxHidden: boolean;\n\n    private selectionElement: HTMLElement;\n\n    private get resultsElement(): HTMLElement {\n        return this.resultContainer?.nativeElement;\n    }\n\n    private _stateChanges = new Subject<void>();\n\n    /** Tab index for the element. */\n    private _tabIndex: number;\n\n    private _disabled = false;\n    private _required = false;\n    private _readonly = false;\n    private _multiple = false;\n    private _overlay = false;\n    private _resettable = false;\n    private _hideSelectedItems = false;\n    private _clickDetection = false;\n    private _clickDetectionFc: (e: MouseEvent) => void;\n    private _id: string;\n    private _uid = `select2-${nextUniqueId++}`;\n    private _value: Select2UpdateValue;\n    private _previousNativeValue: Select2UpdateValue;\n    private _infiniteScroll = true;\n    private _overlayPosition: VerticalConnectionPos;\n\n    constructor(\n        protected _viewportRuler: ViewportRuler,\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Optional() private _parentForm: NgForm,\n        @Optional() private _parentFormGroup: FormGroupDirective,\n        @Self() @Optional() public _control: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n    ) {\n        this.id = this.id;\n        this._tabIndex = parseInt(tabIndex, 10) || 0;\n\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n\n        this._clickDetectionFc = this.clickDetection.bind(this);\n    }\n\n    /** View -> model callback called when select has been touched */\n    private _onTouched = () => {\n        // do nothing\n    };\n\n    /** View -> model callback called when value changes */\n    private _onChange: (value: any) => void = () => {\n        // do nothing\n    };\n\n    ngOnInit() {\n        this._viewportRuler.change(100).subscribe(() => {\n            if (this.isOpen) {\n                this.triggerRect();\n            }\n        });\n\n        const option = Select2Utils.getOptionsByValue(\n            this._data,\n            this._control ? this._control.value : this.value,\n            this.multiple,\n        );\n        if (option !== null) {\n            this.option = option;\n        }\n        if (!Array.isArray(option)) {\n            this.hoveringValue = this.value as string | undefined;\n        }\n        this.updateSearchBox();\n    }\n\n    ngAfterViewInit() {\n        this.cdkConnectedOverlay.positionChange.subscribe((posChange: ConnectedOverlayPositionChange) => {\n            if (\n                this.listPosition === 'auto' &&\n                posChange.connectionPair?.originY &&\n                this._overlayPosition !== posChange.connectionPair.originY\n            ) {\n                this.triggerRect();\n                this._overlayPosition = posChange.connectionPair.originY;\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n\n        this.selectionElement = this.selection.nativeElement;\n        this.triggerRect();\n    }\n\n    ngDoCheck() {\n        this.updateSearchBox();\n        this._dirtyCheckNativeValue();\n        if (this._triggerRect) {\n            if (this.overlayWidth !== this._triggerRect.width) {\n                this.overlayWidth = this._triggerRect.width;\n            }\n            if (this._dropdownRect?.height > 0 && this.overlayHeight !== this._dropdownRect.height) {\n                this.overlayHeight = this.listPosition === 'auto' ? this._dropdownRect.height : 0;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeEventListener('click', this._clickDetectionFc);\n    }\n\n    updateSearchBox() {\n        const hidden = this.customSearchEnabled\n            ? false\n            : Select2Utils.isSearchboxHiddex(this._data, this._minCountForSearch);\n        if (this.isSearchboxHidden !== hidden) {\n            this.isSearchboxHidden = hidden;\n        }\n    }\n\n    hideSearch(): boolean {\n        const displaySearchStatus =\n            displaySearchStatusList.indexOf(this.displaySearchStatus) > -1 ? this.displaySearchStatus : 'default';\n        return (displaySearchStatus === 'default' && this.isSearchboxHidden) || displaySearchStatus === 'hidden';\n    }\n\n    getOptionStyle(option: Select2Option) {\n        return (\n            'select2-results__option ' +\n            (option.hide ? 'select2-results__option--hide ' : '') +\n            (option.value === this.hoveringValue ? 'select2-results__option--highlighted ' : '') +\n            (option.classes || '')\n        );\n    }\n\n    mouseenter(option: Select2Option) {\n        if (!option.disabled) {\n            this.hoveringValue = option.value;\n        }\n    }\n\n    click(option: Select2Option) {\n        if (this.testSelection(option)) {\n            this.select(option);\n        }\n    }\n\n    reset(e: MouseEvent) {\n        this.select(null);\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    prevChange(event: Event) {\n        event.stopPropagation();\n    }\n\n    toggleOpenAndClose() {\n        if (this.disabled) {\n            return;\n        }\n        this._focus(true);\n        this.isOpen = !this.isOpen;\n\n        if (this.isOpen) {\n            this.innerSearchText = '';\n            this.updateFilteredData();\n            this._focusSearchboxOrResultsElement();\n\n            setTimeout(() => {\n                if (this.option) {\n                    const option: Select2Option = this.option instanceof Array ? this.option[0] : this.option;\n                    this.updateScrollFromOption(option);\n                } else if (this.resultsElement) {\n                    this.resultsElement.scrollTop = 0;\n                }\n                setTimeout(() => {\n                    this.triggerRect();\n                    this.cdkConnectedOverlay?.overlayRef?.updatePosition();\n                }, 100);\n            });\n            this.open.emit(this);\n        } else {\n            this.close.emit(this);\n        }\n\n        if (this.isOpen && !this._clickDetection) {\n            setTimeout(() => {\n                window.document.body.addEventListener('click', this._clickDetectionFc, false);\n                this._clickDetection = true;\n            }, timeout);\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    hasTemplate(option: Select2Option | Select2Group, defaut: string) {\n        return (\n            this.templates instanceof TemplateRef ||\n            this.templates?.[option.templateId] instanceof TemplateRef ||\n            this.templates?.[defaut] instanceof TemplateRef\n        );\n    }\n\n    getTemplate(option: Select2Option | Select2Group, defaut: string) {\n        return this.hasTemplate(option, defaut)\n            ? this.templates[option.templateId] || this.templates[defaut] || this.templates\n            : undefined;\n    }\n\n    triggerRect() {\n        this._triggerRect = this.selectionElement.getBoundingClientRect();\n        this._dropdownRect = this.dropdown?.nativeElement\n            ? this.dropdown.nativeElement.getBoundingClientRect()\n            : undefined;\n    }\n\n    private testSelection(option: Select2Option) {\n        if (option.disabled) {\n            return false;\n        }\n\n        if (\n            !this.multiple ||\n            !this.limitSelection ||\n            (Array.isArray(this._value) && this._value.length < this.limitSelection)\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    private testValueChange(value1: Select2UpdateValue, value2: Select2UpdateValue) {\n        if (\n            ((value1 === null || value1 === undefined) && (value2 === null || value2 === undefined)) ||\n            value1 === value2\n        ) {\n            return false;\n        }\n        if (\n            this.multiple &&\n            (value1 as Select2Value[])?.length &&\n            (value2 as Select2Value[])?.length &&\n            (value1 as Select2Value[]).length === (value2 as Select2Value[]).length\n        ) {\n            for (const e1 of value1 as Select2Value[]) {\n                const test = (value2 as Select2Value[]).indexOf(e1) > -1;\n                if (!test) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return true;\n    }\n\n    private updateFilteredData() {\n        setTimeout(() => {\n            let result = this._data;\n            if (this.multiple && this.hideSelectedItems) {\n                result = Select2Utils.getFilteredSelectedData(result, this.option);\n            }\n\n            if (!this.customSearchEnabled && this.searchText && this.searchText.length >= +this.minCharForSearch) {\n                result = Select2Utils.getFilteredData(result, this.searchText, this.editPattern);\n            }\n\n            if (this.maxResults > 0) {\n                const data = Select2Utils.getReduceData(result, +this.maxResults);\n                result = data.result;\n                this.maxResultsExceeded = data.reduce;\n            } else {\n                this.maxResultsExceeded = false;\n            }\n\n            if (Select2Utils.valueIsNotInFilteredData(result, this.hoveringValue)) {\n                this.hoveringValue = Select2Utils.getFirstAvailableOption(result);\n            }\n\n            this.filteredData = result;\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    private clickDetection(e: MouseEvent) {\n        if (!this.ifParentContainsClass(e.target as HTMLElement, 'selection')) {\n            if (this.isOpen && !this.ifParentContainsClass(e.target as HTMLElement, 'select2-dropdown')) {\n                this.toggleOpenAndClose();\n            }\n            if (!this.ifParentContainsId(e.target as HTMLElement, this._id)) {\n                this.clickExit();\n            }\n        } else if (this.isOpen && !this.ifParentContainsId(e.target as HTMLElement, this._id)) {\n            this.toggleOpenAndClose();\n            this.clickExit();\n        }\n    }\n\n    private clickExit() {\n        this._focus(false);\n        window.document.body.removeEventListener('click', this._clickDetectionFc);\n        this._clickDetection = false;\n    }\n\n    private ifParentContainsClass(element: HTMLElement, cssClass: string): boolean {\n        return this.getParentElementByClass(element, cssClass) !== null;\n    }\n\n    private ifParentContainsId(element: HTMLElement, id: string): boolean {\n        return this.getParentElementById(element, id) !== null;\n    }\n\n    private getParentElementByClass(element: HTMLElement, cssClass: string): HTMLElement | null {\n        if (this.containClasses(element, cssClass.trim().split(/\\s+/))) {\n            return element;\n        }\n        return element.parentElement ? this.getParentElementByClass(element.parentElement, cssClass) : null;\n    }\n\n    private getParentElementById(element: HTMLElement, id: string): HTMLElement | null {\n        if (element.id === id) {\n            return element;\n        }\n        return element.parentElement ? this.getParentElementById(element.parentElement, id) : null;\n    }\n\n    private containClasses(element: HTMLElement, cssClasses: string[]): boolean {\n        if (!element.classList) {\n            return false;\n        }\n        for (const cssClass of cssClasses) {\n            if (!element.classList.contains(cssClass)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    focusin() {\n        if (!this.disabled) {\n            this._focus(true);\n        }\n    }\n\n    focusout() {\n        if (this.selectionElement && !this.selectionElement.classList.contains('select2-focused')) {\n            this._focus(false);\n            this._onTouched();\n        }\n    }\n\n    select(option: Select2Option | null) {\n        let value: any;\n        if (option !== null) {\n            if (this.multiple) {\n                const options = this.option as Select2Option[];\n                const index = options.findIndex(op => op.value === option.value);\n                if (index === -1) {\n                    options.push(option);\n                } else {\n                    options.splice(index, 1);\n                }\n                value = (this.option as Select2Option[]).map(op => op.value);\n            } else {\n                this.option = option;\n                if (this.isOpen) {\n                    this.isOpen = false;\n                    this.close.emit(this);\n                    if (this.selectionElement) {\n                        this.selectionElement.focus();\n                    }\n                }\n                value = this.option.value;\n            }\n        } else {\n            this.option = null;\n        }\n\n        if (this.multiple && this.hideSelectedItems) {\n            this.updateFilteredData();\n        }\n\n        if (this._control) {\n            this._onChange(value);\n        } else {\n            this._value = value;\n        }\n\n        this.update.emit({\n            component: this,\n            value: value,\n            options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n        });\n    }\n\n    keyDown(e: KeyboardEvent) {\n        if (this._testKey(e, ['ArrowDown', 40])) {\n            this.moveDown();\n            e.preventDefault();\n        } else if (this._testKey(e, ['ArrowUp', 38])) {\n            this.moveUp();\n            e.preventDefault();\n        } else if (this._testKey(e, ['Enter', 13])) {\n            this.selectByEnter();\n            e.preventDefault();\n        } else if (this._testKey(e, ['Escape', 'Tab', 9, 27]) && this.isOpen) {\n            this.toggleOpenAndClose();\n            this._focus(false);\n        }\n    }\n\n    openKey(e: KeyboardEvent) {\n        if (this._testKey(e, ['ArrowDown', 'ArrowUp', 'Enter', 40, 38, 13])) {\n            this.toggleOpenAndClose();\n            e.preventDefault();\n        } else if (this._testKey(e, ['Escape', 'Tab', 9, 27])) {\n            this._focus(false);\n            this._onTouched();\n        }\n    }\n\n    trackBy(_index: number, item: Select2Option): any {\n        return item.value;\n    }\n\n    searchUpdate(e: Event) {\n        this.searchText = (e.target as HTMLInputElement).value;\n        this.updateFilteredData();\n    }\n\n    isSelected(option: Select2Option) {\n        return Select2Utils.isSelected(this.option, option, this.multiple);\n    }\n\n    isDisabled(option: Select2Option) {\n        return option.disabled ? 'true' : 'false';\n    }\n\n    removeSelection(e: MouseEvent, option: Select2Option) {\n        Select2Utils.removeSelection(this.option, option);\n\n        if (this.multiple && this.hideSelectedItems) {\n            this.updateFilteredData();\n        }\n\n        const value = (this.option as Select2Option[]).map(op => op.value);\n\n        if (this._control) {\n            this._onChange(value);\n        } else {\n            this._value = value;\n        }\n\n        this.update.emit({\n            component: this,\n            value: value,\n            options: Array.isArray(this.option) ? this.option : this.option ? [this.option] : null,\n        });\n        this.removeOption.emit({\n            component: this,\n            value: value,\n            removedOption: option,\n        });\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.isOpen) {\n            this._focusSearchboxOrResultsElement();\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value: any) {\n        this._setSelectionByValue(value);\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    onScroll(way: 'up' | 'down') {\n        this.scroll.emit({\n            component: this,\n            way,\n            search: this.innerSearchText,\n        });\n    }\n\n    _isErrorState(): boolean {\n        const isInvalid = this._control && this._control.invalid;\n        const isTouched = this._control && this._control.touched;\n        const isSubmitted =\n            (this._parentFormGroup && this._parentFormGroup.submitted) ||\n            (this._parentForm && this._parentForm.submitted);\n\n        return !!(isInvalid && (isTouched || isSubmitted));\n    }\n\n    private moveUp() {\n        this.updateScrollFromOption(Select2Utils.getPreviousOption(this.filteredData, this.hoveringValue));\n    }\n\n    private moveDown() {\n        this.updateScrollFromOption(Select2Utils.getNextOption(this.filteredData, this.hoveringValue));\n    }\n\n    private updateScrollFromOption(option: Select2Option) {\n        if (option) {\n            this.hoveringValue = option.value;\n            const domElement = this.results.find(r => r.nativeElement.innerText.trim() === option.label);\n            if (domElement && this.resultsElement) {\n                this.resultsElement.scrollTop = 0;\n                const listClientRect = this.resultsElement.getBoundingClientRect();\n                const optionClientRect = domElement.nativeElement.getBoundingClientRect();\n                this.resultsElement.scrollTop = optionClientRect.top - listClientRect.top;\n            }\n        }\n    }\n\n    private selectByEnter() {\n        if (this.hoveringValue) {\n            const option = Select2Utils.getOptionByValue(this._data, this.hoveringValue);\n            this.select(option);\n        }\n    }\n\n    private _testKey(event: KeyboardEvent, refs: (number | string)[] = []): boolean {\n        return this._isKey(this._getKey(event), refs);\n    }\n\n    private _getKey(event: KeyboardEvent): number | string {\n        let code: number | string;\n\n        if (event.key !== undefined) {\n            code = event.key;\n        } else if (event['keyIdentifier'] !== undefined) {\n            code = event['keyIdentifier'];\n        } else if (event['keyCode'] !== undefined) {\n            code = event['keyCode'];\n        } else {\n            event.preventDefault();\n        }\n\n        return code;\n    }\n\n    private _isKey(code: number | string, refs: (number | string)[] = []): boolean {\n        return refs && refs.length > 0 ? refs.indexOf(code) !== -1 : false;\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.option || (value !== undefined && value !== null)) {\n            const isArray = Array.isArray(value);\n            if (this.multiple && value && !isArray) {\n                throw new Error('Non array value.');\n            } else if (this._data) {\n                if (this.multiple) {\n                    this.option = []; // if value is null, then empty option and return\n                    if (isArray) {\n                        // value is not null. Preselect value\n                        const selectedValues: any = Select2Utils.getOptionsByValue(this._data, value, this.multiple);\n                        selectedValues.map(item => this.select(item));\n                    }\n                } else {\n                    this.select(Select2Utils.getOptionByValue(this._data, value));\n                }\n            } else if (this._control) {\n                this._control.viewToModelUpdate(value);\n            }\n\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this._stateChanges.next();\n        }\n    }\n\n    private _coerceBooleanProperty(value: any): boolean {\n        return value != null && `${value}` !== 'false';\n    }\n\n    private _focusSearchboxOrResultsElement() {\n        if (!this.isSearchboxHidden) {\n            setTimeout(() => {\n                if (this.searchInput && this.searchInput.nativeElement) {\n                    this.searchInput.nativeElement.focus();\n                }\n            });\n        } else if (this.resultsElement) {\n            this.resultsElement.focus();\n        }\n    }\n\n    private _focus(state: boolean) {\n        if (!state && this.focused) {\n            this.focused = state;\n            this.blur.emit(this);\n        } else if (state && !this.focused) {\n            this.focused = state;\n            this.focus.emit(this);\n        }\n    }\n\n    private _isAbobeOverlay(): boolean {\n        return this.overlay && this._overlayPosition && this.listPosition === 'auto'\n            ? this._overlayPosition === 'top'\n            : this.listPosition === 'above';\n    }\n}\n","import { Directive } from '@angular/core';\n\n@Directive({ selector: 'select2-hint' })\nexport class Select2Hint {}\n","import { Directive } from '@angular/core';\n\n@Directive({ selector: 'select2-label' })\nexport class Select2Label {}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { Select2Hint } from './select2-hint.component';\nimport { Select2Label } from './select2-label.component';\nimport { Select2 } from './select2.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, OverlayModule, ReactiveFormsModule, InfiniteScrollModule],\n    declarations: [Select2Hint, Select2Label, Select2],\n    exports: [FormsModule, ReactiveFormsModule, Select2Hint, Select2Label, Select2],\n})\nexport class Select2Module {}\n"]}